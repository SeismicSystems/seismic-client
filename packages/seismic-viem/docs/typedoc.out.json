{
	"id": 0,
	"name": "seismic-viem",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 147,
			"name": "GetPublicClientParameters",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters required to create a public client."
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/seismic-viem/src/client.ts",
					"line": 148,
					"character": 12,
					"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/client.ts#L148"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 148,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 149,
							"name": "chain",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/seismic-viem/src/client.ts",
									"line": 149,
									"character": 2,
									"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/client.ts#L149"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/viem/types/chain.ts",
									"qualifiedName": "Chain"
								},
								"name": "Chain",
								"package": "viem"
							}
						},
						{
							"id": 150,
							"name": "transport",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/seismic-viem/src/client.ts",
									"line": 150,
									"character": 2,
									"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/client.ts#L150"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/viem/clients/transports/createTransport.ts",
									"qualifiedName": "Transport"
								},
								"name": "Transport",
								"package": "viem"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								149,
								150
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/seismic-viem/src/client.ts",
							"line": 148,
							"character": 40,
							"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/client.ts#L148"
						}
					]
				}
			}
		},
		{
			"id": 144,
			"name": "GetSeismicClientsParameters",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters required to create seismic clients, including a public client and a shielded wallet client."
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/seismic-viem/src/client.ts",
					"line": 160,
					"character": 12,
					"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/client.ts#L160"
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 147,
						"name": "GetPublicClientParameters",
						"package": "seismic-viem"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 145,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 146,
									"name": "privateKey",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/seismic-viem/src/client.ts",
											"line": 161,
											"character": 2,
											"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/client.ts#L161"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/viem/types/misc.ts",
											"qualifiedName": "Hex"
										},
										"name": "Hex",
										"package": "viem"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										146
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/seismic-viem/src/client.ts",
									"line": 160,
									"character": 70,
									"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/client.ts#L160"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 105,
			"name": "ShieldedPublicActions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Defines the additional actions available on a shielded public client.\n\nThese actions provide functionality specific to shielded interactions,\nsuch as retrieving the TEE public key or interacting with storage and transactions."
					}
				],
				"blockTags": [
					{
						"tag": "@returns",
						"content": [
							{
								"kind": "text",
								"text": "A promise that resolves to the public key in hexadecimal or string format."
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/seismic-viem/src/actions/public.ts",
					"line": 33,
					"character": 12,
					"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/actions/public.ts#L33"
				}
			],
			"typeParameters": [
				{
					"id": 118,
					"name": "TChain",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the blockchain chain (extends "
							},
							{
								"kind": "code",
								"text": "`Chain`"
							},
							{
								"kind": "text",
								"text": " or "
							},
							{
								"kind": "code",
								"text": "`undefined`"
							},
							{
								"kind": "text",
								"text": ")."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/viem/types/chain.ts",
									"qualifiedName": "Chain"
								},
								"name": "Chain",
								"package": "viem"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					},
					"default": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/viem/types/chain.ts",
									"qualifiedName": "Chain"
								},
								"name": "Chain",
								"package": "viem"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 106,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 110,
							"name": "getStorageAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/seismic-viem/src/actions/public.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/actions/public.ts#L37"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 111,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/seismic-viem/src/actions/public.ts",
											"line": 37,
											"character": 16,
											"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/actions/public.ts#L37"
										}
									],
									"signatures": [
										{
											"id": 112,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 113,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/viem/actions/public/getStorageAt.ts",
															"qualifiedName": "GetStorageAtParameters"
														},
														"name": "GetStorageAtParameters",
														"package": "viem"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/viem/actions/public/getStorageAt.ts",
															"qualifiedName": "GetStorageAtReturnType"
														},
														"name": "GetStorageAtReturnType",
														"package": "viem"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							}
						},
						{
							"id": 107,
							"name": "getTeePublicKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/seismic-viem/src/actions/public.ts",
									"line": 36,
									"character": 2,
									"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/actions/public.ts#L36"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 108,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/seismic-viem/src/actions/public.ts",
											"line": 36,
											"character": 19,
											"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/actions/public.ts#L36"
										}
									],
									"signatures": [
										{
											"id": 109,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/viem/types/misc.ts",
																	"qualifiedName": "Hex"
																},
																"name": "Hex",
																"package": "viem"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							}
						},
						{
							"id": 114,
							"name": "getTransaction",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/seismic-viem/src/actions/public.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/actions/public.ts#L40"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 115,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/seismic-viem/src/actions/public.ts",
											"line": 40,
											"character": 18,
											"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/actions/public.ts#L40"
										}
									],
									"signatures": [
										{
											"id": 116,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 117,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/viem/actions/public/getTransaction.ts",
															"qualifiedName": "GetTransactionParameters"
														},
														"name": "GetTransactionParameters",
														"package": "viem"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/viem/actions/public/getTransaction.ts",
															"qualifiedName": "GetTransactionReturnType"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 118,
																"name": "TChain",
																"package": "seismic-viem",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/viem/types/block.ts",
																	"qualifiedName": "BlockTag"
																},
																"name": "BlockTag",
																"package": "viem"
															}
														],
														"name": "GetTransactionReturnType",
														"package": "viem"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								110,
								107,
								114
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/seismic-viem/src/actions/public.ts",
							"line": 35,
							"character": 4,
							"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/actions/public.ts#L35"
						}
					]
				}
			}
		},
		{
			"id": 135,
			"name": "ShieldedPublicClient",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents a shielded public client with extended functionality for interacting\nwith a blockchain network. This client type combines public RPC schema actions\nwith shielded-specific actions."
					}
				],
				"blockTags": [
					{
						"tag": "@remarks",
						"content": [
							{
								"kind": "text",
								"text": "This client is designed to support both standard public actions and shielded-specific actions.\nIf an additional "
							},
							{
								"kind": "code",
								"text": "`rpcSchema`"
							},
							{
								"kind": "text",
								"text": " is provided, it is appended to the default "
							},
							{
								"kind": "code",
								"text": "`PublicRpcSchema`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					{
						"tag": "@example",
						"content": [
							{
								"kind": "code",
								"text": "```typescript\nconst client: ShieldedPublicClient<HttpTransport, SeismicChain, LocalAccount> = createShieldedClient({\n  transport: httpTransport,\n  chain: seismicChain,\n});\n\n// Use the client for shielded actions\nconst result = await client.shieldedAction(...);\n```"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/seismic-viem/src/client.ts",
					"line": 62,
					"character": 12,
					"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/client.ts#L62"
				}
			],
			"typeParameters": [
				{
					"id": 136,
					"name": "transport",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the transport mechanism used for communication (extends "
							},
							{
								"kind": "code",
								"text": "`Transport`"
							},
							{
								"kind": "text",
								"text": ")."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/viem/clients/transports/createTransport.ts",
							"qualifiedName": "Transport"
						},
						"name": "Transport",
						"package": "viem"
					},
					"default": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/viem/clients/transports/createTransport.ts",
							"qualifiedName": "Transport"
						},
						"name": "Transport",
						"package": "viem"
					}
				},
				{
					"id": 137,
					"name": "chain",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the blockchain chain (extends "
							},
							{
								"kind": "code",
								"text": "`Chain`"
							},
							{
								"kind": "text",
								"text": " or "
							},
							{
								"kind": "code",
								"text": "`undefined`"
							},
							{
								"kind": "text",
								"text": ")."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/viem/types/chain.ts",
									"qualifiedName": "Chain"
								},
								"name": "Chain",
								"package": "viem"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					},
					"default": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/viem/types/chain.ts",
									"qualifiedName": "Chain"
								},
								"name": "Chain",
								"package": "viem"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				},
				{
					"id": 138,
					"name": "accountOrAddress",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the account or address associated with the client (extends "
							},
							{
								"kind": "code",
								"text": "`Account`"
							},
							{
								"kind": "text",
								"text": " or "
							},
							{
								"kind": "code",
								"text": "`undefined`"
							},
							{
								"kind": "text",
								"text": ")."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/viem/accounts/types.ts",
									"qualifiedName": "Account"
								},
								"name": "Account",
								"package": "viem"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					},
					"default": {
						"type": "intrinsic",
						"name": "undefined"
					}
				},
				{
					"id": 139,
					"name": "rpcSchema",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the RPC schema (extends "
							},
							{
								"kind": "code",
								"text": "`RpcSchema`"
							},
							{
								"kind": "text",
								"text": " or "
							},
							{
								"kind": "code",
								"text": "`undefined`"
							},
							{
								"kind": "text",
								"text": ")."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/viem/types/eip1193.ts",
									"qualifiedName": "RpcSchema"
								},
								"name": "RpcSchema",
								"package": "viem"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					},
					"default": {
						"type": "intrinsic",
						"name": "undefined"
					}
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/viem/types/utils.ts",
					"qualifiedName": "Prettify"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/viem/clients/createClient.ts",
							"qualifiedName": "Client"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 136,
								"name": "transport",
								"package": "seismic-viem",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 137,
								"name": "chain",
								"package": "seismic-viem",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 138,
								"name": "accountOrAddress",
								"package": "seismic-viem",
								"refersToTypeParameter": true
							},
							{
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": 139,
									"name": "rpcSchema",
									"package": "seismic-viem",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/viem/types/eip1193.ts",
										"qualifiedName": "RpcSchema"
									},
									"name": "RpcSchema",
									"package": "viem"
								},
								"trueType": {
									"type": "tuple",
									"elements": [
										{
											"type": "rest",
											"elementType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/viem/types/eip1193.ts",
													"qualifiedName": "PublicRpcSchema"
												},
												"name": "PublicRpcSchema",
												"package": "viem"
											}
										},
										{
											"type": "rest",
											"elementType": {
												"type": "reference",
												"target": 139,
												"name": "rpcSchema",
												"package": "seismic-viem",
												"refersToTypeParameter": true
											}
										}
									]
								},
								"falseType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/viem/types/eip1193.ts",
										"qualifiedName": "PublicRpcSchema"
									},
									"name": "PublicRpcSchema",
									"package": "viem"
								}
							},
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/viem/clients/decorators/public.ts",
											"qualifiedName": "PublicActions"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 136,
												"name": "transport",
												"package": "seismic-viem",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 137,
												"name": "chain",
												"package": "seismic-viem",
												"refersToTypeParameter": true
											}
										],
										"name": "PublicActions",
										"package": "viem"
									},
									{
										"type": "reference",
										"target": 105,
										"typeArguments": [
											{
												"type": "reference",
												"target": 137,
												"name": "chain",
												"package": "seismic-viem",
												"refersToTypeParameter": true
											}
										],
										"name": "ShieldedPublicActions",
										"package": "seismic-viem"
									}
								]
							}
						],
						"name": "Client",
						"package": "viem"
					}
				],
				"name": "Prettify",
				"package": "viem"
			}
		},
		{
			"id": 119,
			"name": "ShieldedWalletActions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Defines the actions available for a shielded wallet client.\n\nThese actions provide functionality for interacting with shielded contracts,\nmaking signed calls, sending shielded transactions, and retrieving encryption keys."
					}
				],
				"blockTags": [
					{
						"tag": "@param",
						"name": "args",
						"content": [
							{
								"kind": "text",
								"text": "The parameters required for sending the transaction."
							}
						]
					},
					{
						"tag": "@returns",
						"content": [
							{
								"kind": "text",
								"text": "A promise that resolves to the result of the shielded transaction."
							}
						]
					},
					{
						"tag": "@returns",
						"content": [
							{
								"kind": "text",
								"text": "The encryption key in hexadecimal format."
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/seismic-viem/src/actions/wallet.ts",
					"line": 45,
					"character": 12,
					"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/actions/wallet.ts#L45"
				}
			],
			"typeParameters": [
				{
					"id": 133,
					"name": "TChain",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the blockchain chain (extends "
							},
							{
								"kind": "code",
								"text": "`Chain`"
							},
							{
								"kind": "text",
								"text": " or "
							},
							{
								"kind": "code",
								"text": "`undefined`"
							},
							{
								"kind": "text",
								"text": ")."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/viem/types/chain.ts",
									"qualifiedName": "Chain"
								},
								"name": "Chain",
								"package": "viem"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					},
					"default": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/viem/types/chain.ts",
									"qualifiedName": "Chain"
								},
								"name": "Chain",
								"package": "viem"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				},
				{
					"id": 134,
					"name": "TAccount",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the account (extends "
							},
							{
								"kind": "code",
								"text": "`Account`"
							},
							{
								"kind": "text",
								"text": " or "
							},
							{
								"kind": "code",
								"text": "`undefined`"
							},
							{
								"kind": "text",
								"text": ")."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/viem/accounts/types.ts",
									"qualifiedName": "Account"
								},
								"name": "Account",
								"package": "viem"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					},
					"default": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/viem/accounts/types.ts",
									"qualifiedName": "Account"
								},
								"name": "Account",
								"package": "viem"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 120,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 130,
							"name": "getEncryption",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/seismic-viem/src/actions/wallet.ts",
									"line": 63,
									"character": 2,
									"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/actions/wallet.ts#L63"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 131,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/seismic-viem/src/actions/wallet.ts",
											"line": 63,
											"character": 17,
											"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/actions/wallet.ts#L63"
										}
									],
									"signatures": [
										{
											"id": 132,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/viem/types/misc.ts",
													"qualifiedName": "Hex"
												},
												"name": "Hex",
												"package": "viem"
											}
										}
									]
								}
							}
						},
						{
							"id": 122,
							"name": "readContract",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/seismic-viem/src/actions/wallet.ts",
									"line": 50,
									"character": 2,
									"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/actions/wallet.ts#L50"
								}
							],
							"type": {
								"type": "reference",
								"target": 151,
								"name": "SignedReadContract",
								"package": "seismic-viem"
							}
						},
						{
							"id": 124,
							"name": "sendShieldedTransaction",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/seismic-viem/src/actions/wallet.ts",
									"line": 52,
									"character": 2,
									"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/actions/wallet.ts#L52"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 125,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/seismic-viem/src/actions/wallet.ts",
											"line": 52,
											"character": 27,
											"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/actions/wallet.ts#L52"
										}
									],
									"signatures": [
										{
											"id": 126,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"typeParameters": [
												{
													"id": 128,
													"name": "request",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {
														"isConst": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "src/sendTransaction.ts",
															"qualifiedName": "SendSeismicTransactionRequest"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 133,
																"name": "TChain",
																"package": "seismic-viem",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": 129,
																"name": "TChainOverride",
																"package": "seismic-viem",
																"refersToTypeParameter": true
															}
														],
														"name": "SendSeismicTransactionRequest",
														"package": "seismic-viem"
													}
												},
												{
													"id": 129,
													"name": "TChainOverride",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/viem/types/chain.ts",
																	"qualifiedName": "Chain"
																},
																"name": "Chain",
																"package": "viem"
															},
															{
																"type": "intrinsic",
																"name": "undefined"
															}
														]
													},
													"default": {
														"type": "intrinsic",
														"name": "undefined"
													}
												}
											],
											"parameters": [
												{
													"id": 127,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "src/sendTransaction.ts",
															"qualifiedName": "SendSeismicTransactionParameters"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 133,
																"name": "TChain",
																"package": "seismic-viem",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": 134,
																"name": "TAccount",
																"package": "seismic-viem",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": 129,
																"name": "TChainOverride",
																"package": "seismic-viem",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": 128,
																"name": "request",
																"package": "seismic-viem",
																"refersToTypeParameter": true
															}
														],
														"name": "SendSeismicTransactionParameters",
														"package": "seismic-viem"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "src/sendTransaction.ts",
															"qualifiedName": "SendSeismicTransactionReturnType"
														},
														"name": "SendSeismicTransactionReturnType",
														"package": "seismic-viem"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							}
						},
						{
							"id": 123,
							"name": "signedCall",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/seismic-viem/src/actions/wallet.ts",
									"line": 51,
									"character": 2,
									"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/actions/wallet.ts#L51"
								}
							],
							"type": {
								"type": "reference",
								"target": 96,
								"typeArguments": [
									{
										"type": "reference",
										"target": 133,
										"name": "TChain",
										"package": "seismic-viem",
										"refersToTypeParameter": true
									}
								],
								"name": "SignedCall",
								"package": "seismic-viem"
							}
						},
						{
							"id": 121,
							"name": "writeContract",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/seismic-viem/src/actions/wallet.ts",
									"line": 49,
									"character": 2,
									"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/actions/wallet.ts#L49"
								}
							],
							"type": {
								"type": "reference",
								"target": 168,
								"typeArguments": [
									{
										"type": "reference",
										"target": 133,
										"name": "TChain",
										"package": "seismic-viem",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 134,
										"name": "TAccount",
										"package": "seismic-viem",
										"refersToTypeParameter": true
									}
								],
								"name": "ShieldedWriteContract",
								"package": "seismic-viem"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								130,
								122,
								124,
								123,
								121
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/seismic-viem/src/actions/wallet.ts",
							"line": 48,
							"character": 4,
							"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/actions/wallet.ts#L48"
						}
					]
				}
			}
		},
		{
			"id": 140,
			"name": "ShieldedWalletClient",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents a shielded wallet client with extended functionality for interacting\nwith shielded contracts, performing wallet operations, and executing public actions."
					}
				],
				"blockTags": [
					{
						"tag": "@remarks",
						"content": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`ShieldedWalletClient`"
							},
							{
								"kind": "text",
								"text": " extends the base "
							},
							{
								"kind": "code",
								"text": "`Client`"
							},
							{
								"kind": "text",
								"text": " type by combining public, wallet, and shielded-specific\nactions into a single client. It is designed for secure and advanced blockchain interactions that require\nencryption and shielded transaction capabilities."
							}
						]
					},
					{
						"tag": "@example",
						"content": [
							{
								"kind": "code",
								"text": "```typescript\nconst client: ShieldedWalletClient<HttpTransport, SeismicChain, LocalAccount> = createShieldedWalletClient({\n  chain: seismicChain,\n  transport: httpTransport,\n  privateKey: '0xabcdef...',\n});\n\n// Access wallet-specific and shielded actions\nconst writeResult = await client.writeContract({\n  address: '0x1234...',\n  data: '0xdeadbeef...',\n});\nconst encryptionKey = client.getEncryption();\nconsole.log('Encryption Key:', encryptionKey);\n```"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/seismic-viem/src/client.ts",
					"line": 119,
					"character": 12,
					"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/client.ts#L119"
				}
			],
			"typeParameters": [
				{
					"id": 141,
					"name": "transport",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The transport mechanism used for communication (extends "
							},
							{
								"kind": "code",
								"text": "`Transport`"
							},
							{
								"kind": "text",
								"text": ")."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/viem/clients/transports/createTransport.ts",
							"qualifiedName": "Transport"
						},
						"name": "Transport",
						"package": "viem"
					},
					"default": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/viem/clients/transports/createTransport.ts",
							"qualifiedName": "Transport"
						},
						"name": "Transport",
						"package": "viem"
					}
				},
				{
					"id": 142,
					"name": "chain",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The blockchain chain configuration (extends "
							},
							{
								"kind": "code",
								"text": "`Chain`"
							},
							{
								"kind": "text",
								"text": " or "
							},
							{
								"kind": "code",
								"text": "`undefined`"
							},
							{
								"kind": "text",
								"text": ")."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/viem/types/chain.ts",
									"qualifiedName": "Chain"
								},
								"name": "Chain",
								"package": "viem"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					},
					"default": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/viem/types/chain.ts",
									"qualifiedName": "Chain"
								},
								"name": "Chain",
								"package": "viem"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				},
				{
					"id": 143,
					"name": "account",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The account type associated with the wallet client (extends "
							},
							{
								"kind": "code",
								"text": "`Account`"
							},
							{
								"kind": "text",
								"text": " or "
							},
							{
								"kind": "code",
								"text": "`undefined`"
							},
							{
								"kind": "text",
								"text": ")."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/viem/accounts/types.ts",
									"qualifiedName": "Account"
								},
								"name": "Account",
								"package": "viem"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					},
					"default": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/viem/accounts/types.ts",
									"qualifiedName": "Account"
								},
								"name": "Account",
								"package": "viem"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/viem/clients/createClient.ts",
					"qualifiedName": "Client"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": 141,
						"name": "transport",
						"package": "seismic-viem",
						"refersToTypeParameter": true
					},
					{
						"type": "reference",
						"target": 142,
						"name": "chain",
						"package": "seismic-viem",
						"refersToTypeParameter": true
					},
					{
						"type": "reference",
						"target": 143,
						"name": "account",
						"package": "seismic-viem",
						"refersToTypeParameter": true
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/viem/types/eip1193.ts",
							"qualifiedName": "RpcSchema"
						},
						"name": "RpcSchema",
						"package": "viem"
					},
					{
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/viem/clients/decorators/public.ts",
									"qualifiedName": "PublicActions"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 141,
										"name": "transport",
										"package": "seismic-viem",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 142,
										"name": "chain",
										"package": "seismic-viem",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 143,
										"name": "account",
										"package": "seismic-viem",
										"refersToTypeParameter": true
									}
								],
								"name": "PublicActions",
								"package": "viem"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/viem/clients/decorators/wallet.ts",
									"qualifiedName": "WalletActions"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 142,
										"name": "chain",
										"package": "seismic-viem",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 143,
										"name": "account",
										"package": "seismic-viem",
										"refersToTypeParameter": true
									}
								],
								"name": "WalletActions",
								"package": "viem"
							},
							{
								"type": "reference",
								"target": 119,
								"typeArguments": [
									{
										"type": "reference",
										"target": 142,
										"name": "chain",
										"package": "seismic-viem",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 143,
										"name": "account",
										"package": "seismic-viem",
										"refersToTypeParameter": true
									}
								],
								"name": "ShieldedWalletActions",
								"package": "seismic-viem"
							}
						]
					}
				],
				"name": "Client",
				"package": "viem"
			}
		},
		{
			"id": 168,
			"name": "ShieldedWriteContract",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents a shielded write operation on a smart contract.\n\nThis type defines the function signature for performing "
					},
					{
						"kind": "code",
						"text": "`payable`"
					},
					{
						"kind": "text",
						"text": " or "
					},
					{
						"kind": "code",
						"text": "`nonpayable`"
					},
					{
						"kind": "text",
						"text": "\noperations on a shielded smart contract. The shielded write operation involves\nencrypted payloads and enhanced privacy mechanisms for interacting with the blockchain."
					}
				],
				"blockTags": [
					{
						"tag": "@example",
						"content": [
							{
								"kind": "code",
								"text": "```typescript\nconst writeContract: ShieldedWriteContract<MyChain, MyAccount> = async (args) => {\n  const result = await shieldedWriteContract({\n    abi: myContractAbi,\n    functionName: 'transfer',\n    args: [recipient, amount],\n    value: 100n,\n    gas: 50000n,\n  });\n  return result;\n};\n\nconst result = await writeContract({\n  abi: myContractAbi,\n  functionName: 'transfer',\n  args: ['0x1234...', 100n],\n  value: 100n,\n  gas: 50000n,\n});\nconsole.log('Transaction hash:', result.transactionHash);\n```"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/seismic-viem/src/contract/write.ts",
					"line": 189,
					"character": 12,
					"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/contract/write.ts#L189"
				}
			],
			"typeParameters": [
				{
					"id": 172,
					"name": "TChain",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The blockchain chain type (extends "
							},
							{
								"kind": "code",
								"text": "`Chain`"
							},
							{
								"kind": "text",
								"text": " or "
							},
							{
								"kind": "code",
								"text": "`undefined`"
							},
							{
								"kind": "text",
								"text": ")."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/viem/types/chain.ts",
									"qualifiedName": "Chain"
								},
								"name": "Chain",
								"package": "viem"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				},
				{
					"id": 173,
					"name": "TAccount",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The account type associated with the operation (extends "
							},
							{
								"kind": "code",
								"text": "`Account`"
							},
							{
								"kind": "text",
								"text": " or "
							},
							{
								"kind": "code",
								"text": "`undefined`"
							},
							{
								"kind": "text",
								"text": ")."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/viem/accounts/types.ts",
									"qualifiedName": "Account"
								},
								"name": "Account",
								"package": "viem"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				},
				{
					"id": 174,
					"name": "abi",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ABI (Application Binary Interface) of the contract. Defaults to "
							},
							{
								"kind": "code",
								"text": "`Abi | readonly unknown[]`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/abitype/src/abi.ts",
									"qualifiedName": "Abi"
								},
								"name": "Abi",
								"package": "abitype"
							},
							{
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							}
						]
					},
					"default": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/abitype/src/abi.ts",
									"qualifiedName": "Abi"
								},
								"name": "Abi",
								"package": "abitype"
							},
							{
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							}
						]
					}
				},
				{
					"id": 175,
					"name": "functionName",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the contract function being called, restricted to "
							},
							{
								"kind": "code",
								"text": "`payable`"
							},
							{
								"kind": "text",
								"text": " or "
							},
							{
								"kind": "code",
								"text": "`nonpayable`"
							},
							{
								"kind": "text",
								"text": " functions."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/viem/types/contract.ts",
							"qualifiedName": "ContractFunctionName"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 174,
								"name": "abi",
								"package": "seismic-viem",
								"refersToTypeParameter": true
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "payable"
									},
									{
										"type": "literal",
										"value": "nonpayable"
									}
								]
							}
						],
						"name": "ContractFunctionName",
						"package": "viem"
					},
					"default": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/viem/types/contract.ts",
							"qualifiedName": "ContractFunctionName"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 174,
								"name": "abi",
								"package": "seismic-viem",
								"refersToTypeParameter": true
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "payable"
									},
									{
										"type": "literal",
										"value": "nonpayable"
									}
								]
							}
						],
						"name": "ContractFunctionName",
						"package": "viem"
					}
				},
				{
					"id": 176,
					"name": "args",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The arguments for the contract function, derived from the ABI and function name."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/viem/types/contract.ts",
							"qualifiedName": "ContractFunctionArgs"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 174,
								"name": "abi",
								"package": "seismic-viem",
								"refersToTypeParameter": true
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "payable"
									},
									{
										"type": "literal",
										"value": "nonpayable"
									}
								]
							},
							{
								"type": "reference",
								"target": 175,
								"name": "functionName",
								"package": "seismic-viem",
								"refersToTypeParameter": true
							}
						],
						"name": "ContractFunctionArgs",
						"package": "viem"
					},
					"default": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/viem/types/contract.ts",
							"qualifiedName": "ContractFunctionArgs"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 174,
								"name": "abi",
								"package": "seismic-viem",
								"refersToTypeParameter": true
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "payable"
									},
									{
										"type": "literal",
										"value": "nonpayable"
									}
								]
							},
							{
								"type": "reference",
								"target": 175,
								"name": "functionName",
								"package": "seismic-viem",
								"refersToTypeParameter": true
							}
						],
						"name": "ContractFunctionArgs",
						"package": "viem"
					}
				},
				{
					"id": 177,
					"name": "TChainOverride",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional chain override for the transaction (extends "
							},
							{
								"kind": "code",
								"text": "`Chain`"
							},
							{
								"kind": "text",
								"text": " or "
							},
							{
								"kind": "code",
								"text": "`undefined`"
							},
							{
								"kind": "text",
								"text": ")."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/viem/types/chain.ts",
									"qualifiedName": "Chain"
								},
								"name": "Chain",
								"package": "viem"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					},
					"default": {
						"type": "intrinsic",
						"name": "undefined"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 169,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/seismic-viem/src/contract/write.ts",
							"line": 203,
							"character": 4,
							"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/contract/write.ts#L203"
						}
					],
					"signatures": [
						{
							"id": 170,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A promise that resolves to the result of the write operation."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 171,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The parameters for the shielded write operation. This includes:\n- "
											},
											{
												"kind": "code",
												"text": "`abi`"
											},
											{
												"kind": "text",
												"text": ": The contract's ABI.\n- "
											},
											{
												"kind": "code",
												"text": "`functionName`"
											},
											{
												"kind": "text",
												"text": ": The name of the function being invoked.\n- "
											},
											{
												"kind": "code",
												"text": "`args`"
											},
											{
												"kind": "text",
												"text": ": The arguments for the function.\n- Additional options like gas and value, depending on the chain and account."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/viem/actions/wallet/writeContract.ts",
											"qualifiedName": "WriteContractParameters"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 174,
												"name": "abi",
												"package": "seismic-viem",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 175,
												"name": "functionName",
												"package": "seismic-viem",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 176,
												"name": "args",
												"package": "seismic-viem",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 172,
												"name": "TChain",
												"package": "seismic-viem",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 173,
												"name": "TAccount",
												"package": "seismic-viem",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 177,
												"name": "TChainOverride",
												"package": "seismic-viem",
												"refersToTypeParameter": true
											}
										],
										"name": "WriteContractParameters",
										"package": "viem"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/viem/actions/wallet/writeContract.ts",
											"qualifiedName": "WriteContractReturnType"
										},
										"name": "WriteContractReturnType",
										"package": "viem"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			}
		},
		{
			"id": 96,
			"name": "SignedCall",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/seismic-viem/src/signedCall.ts",
					"line": 42,
					"character": 12,
					"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/signedCall.ts#L42"
				}
			],
			"typeParameters": [
				{
					"id": 100,
					"name": "chain",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/viem/types/chain.ts",
									"qualifiedName": "Chain"
								},
								"name": "Chain",
								"package": "viem"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 97,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/seismic-viem/src/signedCall.ts",
							"line": 42,
							"character": 58,
							"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/signedCall.ts#L42"
						}
					],
					"signatures": [
						{
							"id": 98,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 99,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 101,
										"typeArguments": [
											{
												"type": "reference",
												"target": 100,
												"name": "chain",
												"package": "seismic-viem",
												"refersToTypeParameter": true
											}
										],
										"name": "SignedCallParameters",
										"package": "seismic-viem"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/viem/actions/public/call.ts",
											"qualifiedName": "CallReturnType"
										},
										"name": "CallReturnType",
										"package": "viem"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			}
		},
		{
			"id": 101,
			"name": "SignedCallParameters",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/seismic-viem/src/signedCall.ts",
					"line": 39,
					"character": 12,
					"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/signedCall.ts#L39"
				}
			],
			"typeParameters": [
				{
					"id": 104,
					"name": "chain",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/viem/types/chain.ts",
									"qualifiedName": "Chain"
								},
								"name": "Chain",
								"package": "viem"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/viem/actions/public/call.ts",
							"qualifiedName": "CallParameters"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 104,
								"name": "chain",
								"package": "seismic-viem",
								"refersToTypeParameter": true
							}
						],
						"name": "CallParameters",
						"package": "viem"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 102,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 103,
									"name": "seismicInput",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/seismic-viem/src/signedCall.ts",
											"line": 40,
											"character": 28,
											"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/signedCall.ts#L40"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/viem/types/misc.ts",
											"qualifiedName": "Hex"
										},
										"name": "Hex",
										"package": "viem"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										103
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/seismic-viem/src/signedCall.ts",
									"line": 40,
									"character": 26,
									"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/signedCall.ts#L40"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 151,
			"name": "SignedReadContract",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents a signed read operation on a smart contract.\n\nThis type defines the function signature for performing signed reads on a contract.\nA signed read operation allows secure and authenticated interactions with contract functions\nthat are marked as "
					},
					{
						"kind": "code",
						"text": "`nonpayable`"
					},
					{
						"kind": "text",
						"text": " or "
					},
					{
						"kind": "code",
						"text": "`payable`"
					},
					{
						"kind": "text",
						"text": "."
					}
				],
				"blockTags": [
					{
						"tag": "@example",
						"content": [
							{
								"kind": "code",
								"text": "```typescript\nconst signedRead: SignedReadContract<MyContractAbi> = async (args) => {\n  const result = await signedReadContract({\n    abi: myContractAbi,\n    functionName: 'getBalance',\n    args: ['0x1234...'],\n  });\n  return result;\n};\n\nconst result = await signedRead({\n  abi: myContractAbi,\n  functionName: 'getBalance',\n  args: ['0x1234...'],\n});\nconsole.log('Balance:', result);\n```"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/seismic-viem/src/contract/read.ts",
					"line": 168,
					"character": 12,
					"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/contract/read.ts#L168"
				}
			],
			"typeParameters": [
				{
					"id": 155,
					"name": "TAbi",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ABI (Application Binary Interface) of the contract. Defaults to "
							},
							{
								"kind": "code",
								"text": "`Abi | readonly unknown[]`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/abitype/src/abi.ts",
									"qualifiedName": "Abi"
								},
								"name": "Abi",
								"package": "abitype"
							},
							{
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							}
						]
					},
					"default": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/abitype/src/abi.ts",
									"qualifiedName": "Abi"
								},
								"name": "Abi",
								"package": "abitype"
							},
							{
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							}
						]
					}
				},
				{
					"id": 156,
					"name": "TFunctionName",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the contract function being called. Must be a "
							},
							{
								"kind": "code",
								"text": "`nonpayable`"
							},
							{
								"kind": "text",
								"text": " or "
							},
							{
								"kind": "code",
								"text": "`payable`"
							},
							{
								"kind": "text",
								"text": " function."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/viem/types/contract.ts",
							"qualifiedName": "ContractFunctionName"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 155,
								"name": "TAbi",
								"package": "seismic-viem",
								"refersToTypeParameter": true
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "nonpayable"
									},
									{
										"type": "literal",
										"value": "payable"
									}
								]
							}
						],
						"name": "ContractFunctionName",
						"package": "viem"
					},
					"default": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/viem/types/contract.ts",
							"qualifiedName": "ContractFunctionName"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 155,
								"name": "TAbi",
								"package": "seismic-viem",
								"refersToTypeParameter": true
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "nonpayable"
									},
									{
										"type": "literal",
										"value": "payable"
									}
								]
							}
						],
						"name": "ContractFunctionName",
						"package": "viem"
					}
				},
				{
					"id": 157,
					"name": "TArgs",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The arguments for the specified contract function, derived from the ABI and function name."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/viem/types/contract.ts",
							"qualifiedName": "ContractFunctionArgs"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 155,
								"name": "TAbi",
								"package": "seismic-viem",
								"refersToTypeParameter": true
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "nonpayable"
									},
									{
										"type": "literal",
										"value": "payable"
									}
								]
							},
							{
								"type": "reference",
								"target": 156,
								"name": "TFunctionName",
								"package": "seismic-viem",
								"refersToTypeParameter": true
							}
						],
						"name": "ContractFunctionArgs",
						"package": "viem"
					},
					"default": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/viem/types/contract.ts",
							"qualifiedName": "ContractFunctionArgs"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 155,
								"name": "TAbi",
								"package": "seismic-viem",
								"refersToTypeParameter": true
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "payable"
									},
									{
										"type": "literal",
										"value": "nonpayable"
									}
								]
							},
							{
								"type": "reference",
								"target": 156,
								"name": "TFunctionName",
								"package": "seismic-viem",
								"refersToTypeParameter": true
							}
						],
						"name": "ContractFunctionArgs",
						"package": "viem"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 152,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/seismic-viem/src/contract/read.ts",
							"line": 179,
							"character": 4,
							"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/contract/read.ts#L179"
						}
					],
					"signatures": [
						{
							"id": 153,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A promise that resolves to the result of the signed read operation."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 154,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The parameters for the signed read operation, including:\n- "
											},
											{
												"kind": "code",
												"text": "`abi`"
											},
											{
												"kind": "text",
												"text": ": The contract's ABI.\n- "
											},
											{
												"kind": "code",
												"text": "`functionName`"
											},
											{
												"kind": "text",
												"text": ": The name of the function being invoked.\n- "
											},
											{
												"kind": "code",
												"text": "`args`"
											},
											{
												"kind": "text",
												"text": ": The arguments required for the function call."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/viem/actions/public/readContract.ts",
											"qualifiedName": "ReadContractParameters"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 155,
												"name": "TAbi",
												"package": "seismic-viem",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 156,
												"name": "TFunctionName",
												"package": "seismic-viem",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 157,
												"name": "TArgs",
												"package": "seismic-viem",
												"refersToTypeParameter": true
											}
										],
										"name": "ReadContractParameters",
										"package": "viem"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/viem/actions/public/readContract.ts",
											"qualifiedName": "ReadContractReturnType"
										},
										"name": "ReadContractReturnType",
										"package": "viem"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			}
		},
		{
			"id": 158,
			"name": "SignedReadContractReturnType",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Defines the return type for a signed read operation on a smart contract.\n\nThis type determines the structure of the object returned when performing\nsigned read operations on a contract, based on the provided ABI, client, and\nfunction names."
					}
				],
				"blockTags": [
					{
						"tag": "@remarks",
						"content": [
							{
								"kind": "text",
								"text": "- If "
							},
							{
								"kind": "code",
								"text": "`_walletClient`"
							},
							{
								"kind": "text",
								"text": " is a valid client, the returned type includes a "
							},
							{
								"kind": "code",
								"text": "`sread`"
							},
							{
								"kind": "text",
								"text": " object.\n- The "
							},
							{
								"kind": "code",
								"text": "`sread`"
							},
							{
								"kind": "text",
								"text": " object maps function names ("
							},
							{
								"kind": "code",
								"text": "`_readFunctionNames`"
							},
							{
								"kind": "text",
								"text": ") to callable read functions\n  that match the contract's ABI for "
							},
							{
								"kind": "code",
								"text": "`pure`"
							},
							{
								"kind": "text",
								"text": " or "
							},
							{
								"kind": "code",
								"text": "`view`"
							},
							{
								"kind": "text",
								"text": " functions.\n- If "
							},
							{
								"kind": "code",
								"text": "`_readFunctionNames`"
							},
							{
								"kind": "text",
								"text": " is "
							},
							{
								"kind": "code",
								"text": "`never`"
							},
							{
								"kind": "text",
								"text": ", the return type defaults to "
							},
							{
								"kind": "code",
								"text": "`unknown`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					{
						"tag": "@example",
						"content": [
							{
								"kind": "code",
								"text": "```typescript\ntype ReturnType = SignedReadContractReturnType<MyContractAbi, MyClient>;\n\n// Access the `sread` object with callable contract read functions\nconst value = await returnType.sread.getValue();\n```"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/seismic-viem/src/contract/contract.ts",
					"line": 60,
					"character": 12,
					"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/contract/contract.ts#L60"
				}
			],
			"typeParameters": [
				{
					"id": 161,
					"name": "TAbi",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ABI (Application Binary Interface) of the contract. This can be a strict "
							},
							{
								"kind": "code",
								"text": "`Abi`"
							},
							{
								"kind": "text",
								"text": " type\nor an array of unknown items for less strict use cases."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/abitype/src/abi.ts",
									"qualifiedName": "Abi"
								},
								"name": "Abi",
								"package": "abitype"
							},
							{
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							}
						]
					}
				},
				{
					"id": 162,
					"name": "TClient",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The client type, either a standard "
							},
							{
								"kind": "code",
								"text": "`Client`"
							},
							{
								"kind": "text",
								"text": " or a "
							},
							{
								"kind": "code",
								"text": "`KeyedClient`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/viem/clients/createClient.ts",
									"qualifiedName": "Client"
								},
								"name": "Client",
								"package": "viem"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "src/viem-internal/client.ts",
									"qualifiedName": "KeyedClient"
								},
								"name": "KeyedClient",
								"package": "seismic-viem"
							}
						]
					},
					"default": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/viem/clients/createClient.ts",
									"qualifiedName": "Client"
								},
								"name": "Client",
								"package": "viem"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "src/viem-internal/client.ts",
									"qualifiedName": "KeyedClient"
								},
								"name": "KeyedClient",
								"package": "seismic-viem"
							}
						]
					}
				},
				{
					"id": 163,
					"name": "_readFunctionNames",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The names of the contract's "
							},
							{
								"kind": "code",
								"text": "`pure`"
							},
							{
								"kind": "text",
								"text": " or "
							},
							{
								"kind": "code",
								"text": "`view`"
							},
							{
								"kind": "text",
								"text": " functions, extracted from the ABI."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"default": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 161,
							"name": "TAbi",
							"package": "seismic-viem",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/abitype/src/abi.ts",
								"qualifiedName": "Abi"
							},
							"name": "Abi",
							"package": "abitype"
						},
						"trueType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/abitype/src/abi.ts",
									"qualifiedName": "Abi"
								},
								"name": "Abi",
								"package": "abitype"
							},
							"extendsType": {
								"type": "reference",
								"target": 161,
								"name": "TAbi",
								"package": "seismic-viem",
								"refersToTypeParameter": true
							},
							"trueType": {
								"type": "intrinsic",
								"name": "string"
							},
							"falseType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/abitype/src/utils.ts",
									"qualifiedName": "ExtractAbiFunctionNames"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 161,
										"name": "TAbi",
										"package": "seismic-viem",
										"refersToTypeParameter": true
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "pure"
											},
											{
												"type": "literal",
												"value": "view"
											}
										]
									}
								],
								"name": "ExtractAbiFunctionNames",
								"package": "abitype"
							}
						},
						"falseType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 164,
					"name": "_narrowable",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean flag indicating whether the provided ABI is narrowable to a specific contract's ABI."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"default": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/viem/types/utils.ts",
							"qualifiedName": "IsNarrowable"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 161,
								"name": "TAbi",
								"package": "seismic-viem",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/abitype/src/abi.ts",
									"qualifiedName": "Abi"
								},
								"name": "Abi",
								"package": "abitype"
							}
						],
						"name": "IsNarrowable",
						"package": "viem"
					}
				},
				{
					"id": 165,
					"name": "_walletClient",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The client associated with the wallet, if applicable, otherwise defaults to the provided client."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/viem/clients/createClient.ts",
									"qualifiedName": "Client"
								},
								"name": "Client",
								"package": "viem"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						]
					},
					"default": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 162,
							"name": "TClient",
							"package": "seismic-viem",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reflection",
							"declaration": {
								"id": 166,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 167,
										"name": "wallet",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"sources": [
											{
												"fileName": "packages/seismic-viem/src/contract/contract.ts",
												"line": 70,
												"character": 4,
												"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/contract/contract.ts#L70"
											}
										],
										"type": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/viem/clients/createClient.ts",
												"qualifiedName": "Client"
											},
											"name": "Client",
											"package": "viem"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											167
										]
									}
								],
								"sources": [
									{
										"fileName": "packages/seismic-viem/src/contract/contract.ts",
										"line": 69,
										"character": 59,
										"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/contract/contract.ts#L69"
									}
								]
							}
						},
						"trueType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "literal",
								"value": "wallet"
							},
							"objectType": {
								"type": "reference",
								"target": 162,
								"name": "TClient",
								"package": "seismic-viem",
								"refersToTypeParameter": true
							}
						},
						"falseType": {
							"type": "reference",
							"target": 162,
							"name": "TClient",
							"package": "seismic-viem",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 165,
					"name": "_walletClient",
					"package": "seismic-viem",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/viem/clients/createClient.ts",
						"qualifiedName": "Client"
					},
					"name": "Client",
					"package": "viem"
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/viem/types/utils.ts",
							"qualifiedName": "IsNever"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 163,
								"name": "_readFunctionNames",
								"package": "seismic-viem",
								"refersToTypeParameter": true
							}
						],
						"name": "IsNever",
						"package": "viem"
					},
					"extendsType": {
						"type": "literal",
						"value": true
					},
					"trueType": {
						"type": "intrinsic",
						"name": "unknown"
					},
					"falseType": {
						"type": "reflection",
						"declaration": {
							"id": 159,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 160,
									"name": "sread",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/seismic-viem/src/contract/contract.ts",
											"line": 78,
											"character": 8,
											"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/contract/contract.ts#L78"
										}
									],
									"type": {
										"type": "mapped",
										"parameter": "functionName",
										"parameterType": {
											"type": "reference",
											"target": 163,
											"name": "_readFunctionNames",
											"package": "seismic-viem",
											"refersToTypeParameter": true
										},
										"templateType": {
											"type": "reference",
											"target": {
												"sourceFileName": "src/viem-internal/function.ts",
												"qualifiedName": "GetReadFunction"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 164,
													"name": "_narrowable",
													"package": "seismic-viem",
													"refersToTypeParameter": true
												},
												{
													"type": "reference",
													"target": 161,
													"name": "TAbi",
													"package": "seismic-viem",
													"refersToTypeParameter": true
												},
												{
													"type": "conditional",
													"checkType": {
														"type": "reference",
														"target": {
															"sourceFileName": "src/contract/contract.ts",
															"qualifiedName": "functionName"
														},
														"name": "functionName",
														"package": "seismic-viem",
														"refersToTypeParameter": true
													},
													"extendsType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/viem/types/contract.ts",
															"qualifiedName": "ContractFunctionName"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 161,
																"name": "TAbi",
																"package": "seismic-viem",
																"refersToTypeParameter": true
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "pure"
																	},
																	{
																		"type": "literal",
																		"value": "view"
																	}
																]
															}
														],
														"name": "ContractFunctionName",
														"package": "viem"
													},
													"trueType": {
														"type": "reference",
														"target": {
															"sourceFileName": "src/contract/contract.ts",
															"qualifiedName": "functionName"
														},
														"name": "functionName",
														"package": "seismic-viem",
														"refersToTypeParameter": true
													},
													"falseType": {
														"type": "intrinsic",
														"name": "never"
													}
												}
											],
											"name": "GetReadFunction",
											"package": "seismic-viem"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										160
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/seismic-viem/src/contract/contract.ts",
									"line": 77,
									"character": 6,
									"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/contract/contract.ts#L77"
								}
							]
						}
					}
				},
				"falseType": {
					"type": "intrinsic",
					"name": "unknown"
				}
			}
		},
		{
			"id": 1,
			"name": "seismicDevnet",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Defines the Seismic development network configuration.\n\nThis configuration includes the chain ID, name, native currency, and RPC URLs\nfor connecting to the Seismic development network. It can be used in applications\nthat interact with the blockchain using a defined chain."
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/seismic-viem/src/chain.ts",
					"line": 75,
					"character": 13,
					"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/chain.ts#L75"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 3,
							"name": "blockExplorers",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Collection of block explorers"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/viem/_types/types/chain.d.ts",
									"line": 14,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {
										"isExternal": true
									},
									"children": [
										{
											"id": 5,
											"name": "default",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/viem/_types/types/chain.d.ts",
													"line": 16,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/viem/types/chain.ts",
													"qualifiedName": "ChainBlockExplorer"
												},
												"name": "ChainBlockExplorer",
												"package": "viem"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												5
											]
										}
									],
									"sources": [
										{
											"fileName": "node_modules/viem/_types/types/chain.d.ts",
											"line": 14,
											"character": 21
										}
									],
									"indexSignatures": [
										{
											"id": 6,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/viem/_types/types/chain.d.ts",
													"line": 15,
													"character": 8
												}
											],
											"parameters": [
												{
													"id": 7,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/viem/types/chain.ts",
													"qualifiedName": "ChainBlockExplorer"
												},
												"name": "ChainBlockExplorer",
												"package": "viem"
											}
										}
									]
								}
							}
						},
						{
							"id": 8,
							"name": "contracts",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Collection of contracts"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/viem/_types/types/chain.d.ts",
									"line": 19,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 9,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {
										"isExternal": true
									},
									"children": [
										{
											"id": 10,
											"name": "ensRegistry",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "node_modules/viem/_types/types/chain.d.ts",
													"line": 24,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/viem/types/chain.ts",
													"qualifiedName": "ChainContract"
												},
												"name": "ChainContract",
												"package": "viem"
											}
										},
										{
											"id": 11,
											"name": "ensUniversalResolver",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "node_modules/viem/_types/types/chain.d.ts",
													"line": 25,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/viem/types/chain.ts",
													"qualifiedName": "ChainContract"
												},
												"name": "ChainContract",
												"package": "viem"
											}
										},
										{
											"id": 12,
											"name": "multicall3",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "node_modules/viem/_types/types/chain.d.ts",
													"line": 26,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/viem/types/chain.ts",
													"qualifiedName": "ChainContract"
												},
												"name": "ChainContract",
												"package": "viem"
											}
										},
										{
											"id": 13,
											"name": "universalSignatureVerifier",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "node_modules/viem/_types/types/chain.d.ts",
													"line": 27,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/viem/types/chain.ts",
													"qualifiedName": "ChainContract"
												},
												"name": "ChainContract",
												"package": "viem"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												10,
												11,
												12,
												13
											]
										}
									],
									"sources": [
										{
											"fileName": "node_modules/viem/_types/types/utils.d.ts",
											"line": 125,
											"character": 26
										}
									],
									"indexSignatures": [
										{
											"id": 14,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 15,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/viem/types/chain.ts",
															"qualifiedName": "ChainContract"
														},
														"name": "ChainContract",
														"package": "viem"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/viem/_types/types/chain.d.ts",
																	"line": 20,
																	"character": 39
																}
															],
															"indexSignatures": [
																{
																	"id": 17,
																	"name": "__index",
																	"variant": "signature",
																	"kind": 8192,
																	"flags": {
																		"isExternal": true
																	},
																	"sources": [
																		{
																			"fileName": "node_modules/viem/_types/types/chain.d.ts",
																			"line": 21,
																			"character": 12
																		}
																	],
																	"parameters": [
																		{
																			"id": 18,
																			"name": "sourceId",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/viem/types/chain.ts",
																					"qualifiedName": "ChainContract"
																				},
																				"name": "ChainContract",
																				"package": "viem"
																			}
																		]
																	}
																}
															]
														}
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 34,
							"name": "custom",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Custom chain data."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/viem/_types/types/chain.d.ts",
									"line": 47,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 35,
							"name": "fees",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Modifies how fees are derived."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/viem/_types/types/chain.d.ts",
									"line": 49,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/viem/types/chain.ts",
									"qualifiedName": "ChainFees"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								],
								"name": "ChainFees",
								"package": "viem"
							}
						},
						{
							"id": 36,
							"name": "formatters",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Modifies how data is formatted and typed (e.g. blocks and transactions)"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/viem/_types/types/chain.d.ts",
									"line": 51,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 19,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "ID in number form"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/viem/_types/types/chain.d.ts",
									"line": 30,
									"character": 4
								},
								{
									"fileName": "packages/seismic-viem/src/chain.ts",
									"line": 77,
									"character": 2,
									"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/chain.ts#L77"
								}
							],
							"type": {
								"type": "literal",
								"value": 1337
							}
						},
						{
							"id": 20,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Human-readable name"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/viem/_types/types/chain.d.ts",
									"line": 32,
									"character": 4
								},
								{
									"fileName": "packages/seismic-viem/src/chain.ts",
									"line": 78,
									"character": 2,
									"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/chain.ts#L78"
								}
							],
							"type": {
								"type": "literal",
								"value": "Seismic"
							}
						},
						{
							"id": 21,
							"name": "nativeCurrency",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Currency used by chain"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/viem/_types/types/chain.d.ts",
									"line": 34,
									"character": 4
								},
								{
									"fileName": "packages/seismic-viem/src/chain.ts",
									"line": 79,
									"character": 2,
									"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/chain.ts#L79"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 22,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {
										"isExternal": true
									},
									"children": [
										{
											"id": 23,
											"name": "decimals",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true,
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "packages/seismic-viem/src/chain.ts",
													"line": 80,
													"character": 4,
													"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/chain.ts#L80"
												}
											],
											"type": {
												"type": "literal",
												"value": 18
											},
											"defaultValue": "18"
										},
										{
											"id": 24,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true,
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "packages/seismic-viem/src/chain.ts",
													"line": 81,
													"character": 4,
													"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/chain.ts#L81"
												}
											],
											"type": {
												"type": "literal",
												"value": "Ether"
											},
											"defaultValue": "'Ether'"
										},
										{
											"id": 25,
											"name": "symbol",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true,
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "packages/seismic-viem/src/chain.ts",
													"line": 82,
													"character": 4,
													"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/chain.ts#L82"
												}
											],
											"type": {
												"type": "literal",
												"value": "ETH"
											},
											"defaultValue": "'ETH'"
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												23,
												24,
												25
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/seismic-viem/src/chain.ts",
											"line": 79,
											"character": 18,
											"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/chain.ts#L79"
										}
									]
								}
							}
						},
						{
							"id": 26,
							"name": "rpcUrls",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Collection of RPC endpoints"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/viem/_types/types/chain.d.ts",
									"line": 36,
									"character": 4
								},
								{
									"fileName": "packages/seismic-viem/src/chain.ts",
									"line": 84,
									"character": 2,
									"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/chain.ts#L84"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 27,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {
										"isExternal": true
									},
									"children": [
										{
											"id": 28,
											"name": "default",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true,
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "packages/seismic-viem/src/chain.ts",
													"line": 85,
													"character": 4,
													"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/chain.ts#L85"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 29,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 30,
															"name": "http",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isExternal": true,
																"isReadonly": true
															},
															"sources": [
																{
																	"fileName": "packages/seismic-viem/src/chain.ts",
																	"line": 89,
																	"character": 6,
																	"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/chain.ts#L89"
																}
															],
															"type": {
																"type": "typeOperator",
																"operator": "readonly",
																"target": {
																	"type": "tuple",
																	"elements": [
																		{
																			"type": "literal",
																			"value": "http://127.0.0.1:8545"
																		}
																	]
																}
															},
															"defaultValue": "..."
														},
														{
															"id": 31,
															"name": "webSocket",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isExternal": true,
																"isReadonly": true
															},
															"sources": [
																{
																	"fileName": "packages/seismic-viem/src/chain.ts",
																	"line": 90,
																	"character": 6,
																	"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/chain.ts#L90"
																}
															],
															"type": {
																"type": "typeOperator",
																"operator": "readonly",
																"target": {
																	"type": "tuple",
																	"elements": [
																		{
																			"type": "literal",
																			"value": "ws://127.0.0.1:8545"
																		}
																	]
																}
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																30,
																31
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/seismic-viem/src/chain.ts",
															"line": 85,
															"character": 13,
															"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/chain.ts#L85"
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												28
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/seismic-viem/src/chain.ts",
											"line": 84,
											"character": 11,
											"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/chain.ts#L84"
										}
									]
								}
							}
						},
						{
							"id": 37,
							"name": "serializers",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Modifies how data is serialized (e.g. transactions)."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/viem/_types/types/chain.d.ts",
									"line": 53,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/viem/types/chain.ts",
									"qualifiedName": "ChainSerializers"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/viem/types/transaction.ts",
											"qualifiedName": "TransactionSerializable"
										},
										"name": "TransactionSerializable",
										"package": "viem"
									}
								],
								"name": "ChainSerializers",
								"package": "viem"
							}
						},
						{
							"id": 32,
							"name": "sourceId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Source Chain ID (ie. the L1 chain)"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/viem/_types/types/chain.d.ts",
									"line": 41,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 33,
							"name": "testnet",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Flag for test networks"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/viem/_types/types/chain.d.ts",
									"line": 43,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3,
								8,
								34,
								35,
								36,
								19,
								20,
								21,
								26,
								37,
								32,
								33
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/viem/_types/types/utils.d.ts",
							"line": 125,
							"character": 26
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 67,
			"name": "createShieldedPublicClient",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/seismic-viem/src/client.ts",
					"line": 200,
					"character": 16,
					"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/client.ts#L200"
				}
			],
			"signatures": [
				{
					"id": 68,
					"name": "createShieldedPublicClient",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Creates a shielded public client with extended functionality for interacting\nwith shielded blockchain features.\n\nThis function builds upon the base public client and extends it with shielded-specific actions,\nsuch as retrieving the Trusted Execution Environment (TEE) public key and interacting with\nshielded features."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "A shielded public client\ninstance with extended shielded actions."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```typescript\nconst client = createShieldedPublicClient({\n  transport: httpTransport,\n  chain: seismicChain,\n  rpcSchema: customRpcSchema,\n});\n\n// Use shielded public actions\nconst teePublicKey = await client.getTeePublicKey();\nconsole.log('TEE Public Key:', teePublicKey);\n```"
									}
								]
							},
							{
								"tag": "@remarks",
								"content": [
									{
										"kind": "text",
										"text": "The returned client includes all standard public client actions and additional\nshielded-specific actions. It is suitable for applications requiring secure and\nshielded interactions with blockchain networks."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/seismic-viem/src/client.ts",
							"line": 200,
							"character": 16,
							"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/client.ts#L200"
						}
					],
					"typeParameters": [
						{
							"id": 69,
							"name": "transport",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the transport mechanism used for communication (extends "
									},
									{
										"kind": "code",
										"text": "`Transport`"
									},
									{
										"kind": "text",
										"text": ")."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/viem/clients/transports/createTransport.ts",
									"qualifiedName": "Transport"
								},
								"name": "Transport",
								"package": "viem"
							}
						},
						{
							"id": 70,
							"name": "chain",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the blockchain chain (extends "
									},
									{
										"kind": "code",
										"text": "`Chain`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": ")."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/viem/types/chain.ts",
											"qualifiedName": "Chain"
										},
										"name": "Chain",
										"package": "viem"
									}
								]
							},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 71,
							"name": "rpcSchema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the RPC schema (extends "
									},
									{
										"kind": "code",
										"text": "`RpcSchema`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": ")."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/viem/types/eip1193.ts",
											"qualifiedName": "RpcSchema"
										},
										"name": "RpcSchema",
										"package": "viem"
									}
								]
							},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						}
					],
					"parameters": [
						{
							"id": 72,
							"name": "parameters",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The configuration parameters for creating the public client. Includes transport,\nchain, and optional RPC schema definitions."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 73,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 75,
											"name": "batch",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Flags for batch settings."
													}
												]
											},
											"sources": [
												{
													"fileName": "node_modules/viem/_types/clients/createClient.d.ts",
													"line": 17,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 76,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 77,
															"name": "multicall",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Toggle to enable "
																	},
																	{
																		"kind": "code",
																		"text": "`eth_call`"
																	},
																	{
																		"kind": "text",
																		"text": " multicall aggregation."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "node_modules/viem/_types/clients/createClient.d.ts",
																	"line": 19,
																	"character": 8
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "boolean"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 78,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {
																				"isExternal": true
																			},
																			"children": [
																				{
																					"id": 79,
																					"name": "batchSize",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isExternal": true,
																						"isOptional": true
																					},
																					"comment": {
																						"summary": [
																							{
																								"kind": "text",
																								"text": "The maximum size (in bytes) for each calldata chunk."
																							}
																						],
																						"blockTags": [
																							{
																								"tag": "@default",
																								"content": [
																									{
																										"kind": "code",
																										"text": "```ts\n1_024\n```"
																									}
																								]
																							}
																						]
																					},
																					"sources": [
																						{
																							"fileName": "node_modules/viem/_types/clients/createClient.d.ts",
																							"line": 94,
																							"character": 4
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "number"
																					}
																				},
																				{
																					"id": 80,
																					"name": "wait",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isExternal": true,
																						"isOptional": true
																					},
																					"comment": {
																						"summary": [
																							{
																								"kind": "text",
																								"text": "The maximum number of milliseconds to wait before sending a batch."
																							}
																						],
																						"blockTags": [
																							{
																								"tag": "@default",
																								"content": [
																									{
																										"kind": "code",
																										"text": "```ts\n0\n```"
																									}
																								]
																							}
																						]
																					},
																					"sources": [
																						{
																							"fileName": "node_modules/viem/_types/clients/createClient.d.ts",
																							"line": 96,
																							"character": 4
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "number"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						79,
																						80
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "node_modules/viem/_types/types/utils.d.ts",
																					"line": 125,
																					"character": 26
																				}
																			]
																		}
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																77
															]
														}
													],
													"sources": [
														{
															"fileName": "node_modules/viem/_types/clients/createClient.d.ts",
															"line": 17,
															"character": 12
														}
													]
												}
											}
										},
										{
											"id": 81,
											"name": "cacheTime",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Time (in ms) that cached data will remain in memory."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n4_000\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "node_modules/viem/_types/clients/createClient.d.ts",
													"line": 25,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 82,
											"name": "ccipRead",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "[CCIP Read](https://eips.ethereum.org/EIPS/eip-3668) configuration.\nIf "
													},
													{
														"kind": "code",
														"text": "`false`"
													},
													{
														"kind": "text",
														"text": ", the client will not support offchain CCIP lookups."
													}
												]
											},
											"sources": [
												{
													"fileName": "node_modules/viem/_types/clients/createClient.d.ts",
													"line": 30,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": false
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 83,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {
																"isExternal": true
															},
															"children": [
																{
																	"id": 84,
																	"name": "request",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isExternal": true,
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "A function that will be called to make the offchain CCIP lookup request."
																			}
																		],
																		"blockTags": [
																			{
																				"tag": "@see",
																				"content": [
																					{
																						"kind": "text",
																						"text": "https://eips.ethereum.org/EIPS/eip-3668#client-lookup-protocol"
																					}
																				]
																			}
																		]
																	},
																	"sources": [
																		{
																			"fileName": "node_modules/viem/_types/clients/createClient.d.ts",
																			"line": 35,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 85,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {
																				"isExternal": true
																			},
																			"sources": [
																				{
																					"fileName": "node_modules/viem/_types/clients/createClient.d.ts",
																					"line": 35,
																					"character": 18
																				}
																			],
																			"signatures": [
																				{
																					"id": 86,
																					"name": "__type",
																					"variant": "signature",
																					"kind": 4096,
																					"flags": {
																						"isExternal": true
																					},
																					"sources": [
																						{
																							"fileName": "node_modules/viem/_types/clients/createClient.d.ts",
																							"line": 35,
																							"character": 18
																						}
																					],
																					"parameters": [
																						{
																							"id": 87,
																							"name": "parameters",
																							"variant": "param",
																							"kind": 32768,
																							"flags": {
																								"isExternal": true
																							},
																							"type": {
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../node_modules/viem/utils/ccip.ts",
																									"qualifiedName": "CcipRequestParameters"
																								},
																								"name": "CcipRequestParameters",
																								"package": "viem"
																							}
																						}
																					],
																					"type": {
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																							"qualifiedName": "Promise"
																						},
																						"typeArguments": [
																							{
																								"type": "templateLiteral",
																								"head": "0x",
																								"tail": [
																									[
																										{
																											"type": "intrinsic",
																											"name": "string"
																										},
																										""
																									]
																								]
																							}
																						],
																						"name": "Promise",
																						"package": "typescript"
																					}
																				}
																			]
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		84
																	]
																}
															],
															"sources": [
																{
																	"fileName": "node_modules/viem/_types/clients/createClient.d.ts",
																	"line": 30,
																	"character": 15
																}
															]
														}
													}
												]
											}
										},
										{
											"id": 88,
											"name": "chain",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Chain for the client."
													}
												]
											},
											"sources": [
												{
													"fileName": "node_modules/viem/_types/clients/createClient.d.ts",
													"line": 38,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/viem/types/chain.ts",
															"qualifiedName": "Chain"
														},
														"name": "Chain",
														"package": "viem"
													},
													{
														"type": "reference",
														"target": 70,
														"name": "chain",
														"package": "seismic-viem",
														"refersToTypeParameter": true
													}
												]
											}
										},
										{
											"id": 89,
											"name": "key",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A key for the client."
													}
												]
											},
											"sources": [
												{
													"fileName": "node_modules/viem/_types/clients/createClient.d.ts",
													"line": 40,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 74,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A name for the client."
													}
												]
											},
											"sources": [
												{
													"fileName": "node_modules/viem/_types/clients/createClient.d.ts",
													"line": 42,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 90,
											"name": "pollingInterval",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Frequency (in ms) for polling enabled actions & events."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n4_000\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "node_modules/viem/_types/clients/createClient.d.ts",
													"line": 47,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 92,
											"name": "rpcSchema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Typed JSON-RPC schema for the client."
													}
												]
											},
											"sources": [
												{
													"fileName": "node_modules/viem/_types/clients/createClient.d.ts",
													"line": 51,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"target": 71,
												"name": "rpcSchema",
												"package": "seismic-viem",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 91,
											"name": "transport",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The RPC transport"
													}
												]
											},
											"sources": [
												{
													"fileName": "node_modules/viem/_types/clients/createClient.d.ts",
													"line": 53,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"target": 69,
												"name": "transport",
												"package": "seismic-viem",
												"refersToTypeParameter": true
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												75,
												81,
												82,
												88,
												89,
												74,
												90,
												92,
												91
											]
										}
									],
									"sources": [
										{
											"fileName": "node_modules/viem/_types/types/utils.d.ts",
											"line": 125,
											"character": 26
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 135,
						"typeArguments": [
							{
								"type": "reference",
								"target": 69,
								"name": "transport",
								"package": "seismic-viem",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 70,
								"name": "chain",
								"package": "seismic-viem",
								"refersToTypeParameter": true
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": 71,
								"name": "rpcSchema",
								"package": "seismic-viem",
								"refersToTypeParameter": true
							}
						],
						"name": "ShieldedPublicClient",
						"package": "seismic-viem"
					}
				}
			]
		},
		{
			"id": 93,
			"name": "createShieldedWalletClient",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Creates a shielded wallet client with extended functionality for interacting\nwith shielded blockchain features, wallet operations, and encryption.\n\nThis function builds upon the "
					},
					{
						"kind": "code",
						"text": "`getSeismicClients`"
					},
					{
						"kind": "text",
						"text": " helper to initialize and configure\na shielded wallet client using a provided private key. The client supports standard\nwallet operations, public actions, and shielded-specific actions."
					}
				],
				"blockTags": [
					{
						"tag": "@example",
						"content": [
							{
								"kind": "code",
								"text": "```typescript\nconst walletClient = await createShieldedWalletClient({\n  chain: seismicChain,\n  transport: httpTransport,\n  privateKey: '0xabcdef...',\n});\n\n// Perform wallet operations\nconst result = await walletClient.writeContract({\n  address: '0x1234...',\n  data: '0xdeadbeef...',\n});\n\n// Access shielded-specific actions\nconst encryptionKey = walletClient.getEncryption();\nconsole.log('Encryption Key:', encryptionKey);\n```"
							}
						]
					},
					{
						"tag": "@remarks",
						"content": [
							{
								"kind": "text",
								"text": "This function is a wrapper around "
							},
							{
								"kind": "code",
								"text": "`getSeismicClients`"
							},
							{
								"kind": "text",
								"text": ", extracting and returning the wallet\nclient from the generated clients. The shielded wallet client is equipped with:\n- Public actions\n- Wallet-specific actions\n- Shielded-specific actions\n\nThe encryption key is derived from the provided private key and the TEE public key of the network."
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/seismic-viem/src/client.ts",
					"line": 285,
					"character": 13,
					"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/client.ts#L285"
				}
			],
			"signatures": [
				{
					"id": 94,
					"name": "createShieldedWalletClient",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "A promise that resolves\nto a fully configured shielded wallet client."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/seismic-viem/src/client.ts",
							"line": 285,
							"character": 42,
							"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/client.ts#L285"
						}
					],
					"parameters": [
						{
							"id": 95,
							"name": "__namedParameters",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 144,
								"name": "GetSeismicClientsParameters",
								"package": "seismic-viem"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 140,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/viem/clients/transports/createTransport.ts",
											"qualifiedName": "Transport"
										},
										"name": "Transport",
										"package": "viem"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/viem/types/chain.ts",
											"qualifiedName": "Chain"
										},
										"name": "Chain",
										"package": "viem"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/viem/accounts/types.ts",
											"qualifiedName": "Account"
										},
										"name": "Account",
										"package": "viem"
									}
								],
								"name": "ShieldedWalletClient",
								"package": "seismic-viem"
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 38,
			"name": "getShieldedContract",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/seismic-viem/src/contract/contract.ts",
					"line": 139,
					"character": 16,
					"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/contract/contract.ts#L139"
				}
			],
			"signatures": [
				{
					"id": 39,
					"name": "getShieldedContract",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieves a shielded contract instance with extended functionality for performing\nshielded write operations, signed reads, and contract interaction.\n\nThis function extends the base "
							},
							{
								"kind": "code",
								"text": "`getContract`"
							},
							{
								"kind": "text",
								"text": " functionality by adding:\n- Shielded write actions for "
							},
							{
								"kind": "code",
								"text": "`nonpayable`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`payable`"
							},
							{
								"kind": "text",
								"text": " functions.\n- Signed read actions for "
							},
							{
								"kind": "code",
								"text": "`pure`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`view`"
							},
							{
								"kind": "text",
								"text": " functions.\n- Proxy-based access to dynamically invoke contract methods."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "A contract instance with extended shielded write and signed read functionalities.\nThe returned object includes standard contract methods ("
									},
									{
										"kind": "code",
										"text": "`abi`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`address`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`createEventFilter`"
									},
									{
										"kind": "text",
										"text": ", etc.)\nand shielded-specific methods ("
									},
									{
										"kind": "code",
										"text": "`write`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`read`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`sread`"
									},
									{
										"kind": "text",
										"text": ")."
									}
								]
							},
							{
								"tag": "@throws",
								"content": [
									{
										"kind": "text",
										"text": "If the wallet client is not provided for shielded write or signed read operations."
									}
								]
							},
							{
								"tag": "@throws",
								"content": [
									{
										"kind": "text",
										"text": "If the wallet client does not have an account configured for signed reads."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```typescript\nconst contract = getShieldedContract({\n  abi: myContractAbi,\n  address: '0x1234...',\n  client: shieldedWalletClient,\n});\n\n// Perform a shielded write\nawait contract.write.myFunction([arg1, arg2], { gas: 50000n });\n\n// Perform a signed read\nconst value = await contract.sread.getValue();\nconsole.log('Value:', value);\n```"
									}
								]
							},
							{
								"tag": "@remarks",
								"content": [
									{
										"kind": "text",
										"text": "- The "
									},
									{
										"kind": "code",
										"text": "`write`"
									},
									{
										"kind": "text",
										"text": " property allows dynamic invocation of "
									},
									{
										"kind": "code",
										"text": "`nonpayable`"
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "code",
										"text": "`payable`"
									},
									{
										"kind": "text",
										"text": " functions.\n- The "
									},
									{
										"kind": "code",
										"text": "`read`"
									},
									{
										"kind": "text",
										"text": " property will toggle between public reads and signed reads, depending on whether an "
									},
									{
										"kind": "code",
										"text": "`account`"
									},
									{
										"kind": "text",
										"text": " is provided\n- The "
									},
									{
										"kind": "code",
										"text": "`sread`"
									},
									{
										"kind": "text",
										"text": " property does the same as "
									},
									{
										"kind": "code",
										"text": "`read`"
									},
									{
										"kind": "text",
										"text": ", except provides "
									},
									{
										"kind": "code",
										"text": "`account`"
									},
									{
										"kind": "text",
										"text": " as a parameter (so it always makes a signed read)\n- The client must be a "
									},
									{
										"kind": "code",
										"text": "`ShieldedWalletClient`"
									},
									{
										"kind": "text",
										"text": " or provide a wallet client for shielded-specific operations."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/seismic-viem/src/contract/contract.ts",
							"line": 139,
							"character": 16,
							"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/contract/contract.ts#L139"
						}
					],
					"typeParameters": [
						{
							"id": 40,
							"name": "TTransport",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The transport mechanism used for communication (extends "
									},
									{
										"kind": "code",
										"text": "`Transport`"
									},
									{
										"kind": "text",
										"text": ")."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/viem/clients/transports/createTransport.ts",
									"qualifiedName": "Transport"
								},
								"name": "Transport",
								"package": "viem"
							}
						},
						{
							"id": 41,
							"name": "TAddress",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The address type of the contract."
									}
								]
							},
							"type": {
								"type": "templateLiteral",
								"head": "0x",
								"tail": [
									[
										{
											"type": "intrinsic",
											"name": "string"
										},
										""
									]
								]
							}
						},
						{
							"id": 42,
							"name": "TAbi",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ABI (Application Binary Interface) of the contract, either strict "
									},
									{
										"kind": "code",
										"text": "`Abi`"
									},
									{
										"kind": "text",
										"text": " or unknown array."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/abitype/src/abi.ts",
											"qualifiedName": "Abi"
										},
										"name": "Abi",
										"package": "abitype"
									},
									{
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									}
								]
							}
						},
						{
							"id": 43,
							"name": "TClient",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The client type, supporting either a "
									},
									{
										"kind": "code",
										"text": "`ShieldedWalletClient`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`KeyedClient`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 140,
										"typeArguments": [
											{
												"type": "reference",
												"target": 40,
												"name": "TTransport",
												"package": "seismic-viem",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 44,
												"name": "TChain",
												"package": "seismic-viem",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 45,
												"name": "TAccount",
												"package": "seismic-viem",
												"refersToTypeParameter": true
											}
										],
										"name": "ShieldedWalletClient",
										"package": "seismic-viem"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/viem-internal/client.ts",
											"qualifiedName": "KeyedClient"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 40,
												"name": "TTransport",
												"package": "seismic-viem",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 44,
												"name": "TChain",
												"package": "seismic-viem",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 45,
												"name": "TAccount",
												"package": "seismic-viem",
												"refersToTypeParameter": true
											}
										],
										"name": "KeyedClient",
										"package": "seismic-viem"
									}
								]
							}
						},
						{
							"id": 44,
							"name": "TChain",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The blockchain chain type (extends "
									},
									{
										"kind": "code",
										"text": "`Chain`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": ")."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/viem/types/chain.ts",
											"qualifiedName": "Chain"
										},
										"name": "Chain",
										"package": "viem"
									}
								]
							},
							"default": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/viem/types/chain.ts",
											"qualifiedName": "Chain"
										},
										"name": "Chain",
										"package": "viem"
									}
								]
							}
						},
						{
							"id": 45,
							"name": "TAccount",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The account type associated with the wallet client (extends "
									},
									{
										"kind": "code",
										"text": "`Account`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": ")."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/viem/accounts/types.ts",
											"qualifiedName": "Account"
										},
										"name": "Account",
										"package": "viem"
									}
								]
							},
							"default": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/viem/accounts/types.ts",
											"qualifiedName": "Account"
										},
										"name": "Account",
										"package": "viem"
									}
								]
							}
						}
					],
					"parameters": [
						{
							"id": 46,
							"name": "__namedParameters",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/viem/actions/getContract.ts",
									"qualifiedName": "GetContractParameters"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 40,
										"name": "TTransport",
										"package": "seismic-viem",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 44,
										"name": "TChain",
										"package": "seismic-viem",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 45,
										"name": "TAccount",
										"package": "seismic-viem",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 42,
										"name": "TAbi",
										"package": "seismic-viem",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 43,
										"name": "TClient",
										"package": "seismic-viem",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 41,
										"name": "TAddress",
										"package": "seismic-viem",
										"refersToTypeParameter": true
									}
								],
								"name": "GetContractParameters",
								"package": "viem"
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/viem/actions/getContract.ts",
									"qualifiedName": "GetContractReturnType"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 42,
										"name": "TAbi",
										"package": "seismic-viem",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 43,
										"name": "TClient",
										"package": "seismic-viem",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 41,
										"name": "TAddress",
										"package": "seismic-viem",
										"refersToTypeParameter": true
									}
								],
								"name": "GetContractReturnType",
								"package": "viem"
							},
							{
								"type": "reference",
								"target": 158,
								"typeArguments": [
									{
										"type": "reference",
										"target": 42,
										"name": "TAbi",
										"package": "seismic-viem",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 43,
										"name": "TClient",
										"package": "seismic-viem",
										"refersToTypeParameter": true
									}
								],
								"name": "SignedReadContractReturnType",
								"package": "seismic-viem"
							}
						]
					}
				}
			]
		},
		{
			"id": 56,
			"name": "shieldedWriteContract",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/seismic-viem/src/contract/write.ts",
					"line": 88,
					"character": 22,
					"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/contract/write.ts#L88"
				}
			],
			"signatures": [
				{
					"id": 57,
					"name": "shieldedWriteContract",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Executes a write function on a contract.\n\n- Docs: https://viem.sh/docs/contract/writeContract\n- Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts/writing-to-contracts\n\nA \"write\" function on a Solidity contract modifies the state of the blockchain. These types of functions require gas to be executed, and hence a [Transaction](https://viem.sh/docs/glossary/terms) is needed to be broadcast in order to change the state.\n\nInternally, uses a [Wallet Client](https://viem.sh/docs/clients/wallet) to call the ["
							},
							{
								"kind": "code",
								"text": "`sendTransaction`"
							},
							{
								"kind": "text",
								"text": " action](https://viem.sh/docs/actions/wallet/sendTransaction) with [ABI-encoded "
							},
							{
								"kind": "code",
								"text": "`data`"
							},
							{
								"kind": "text",
								"text": "](https://viem.sh/docs/contract/encodeFunctionData).\n\n__Warning: The "
							},
							{
								"kind": "code",
								"text": "`write`"
							},
							{
								"kind": "text",
								"text": " internally sends a transaction – it does not validate if the contract write will succeed (the contract may throw an error). It is highly recommended to [simulate the contract write with "
							},
							{
								"kind": "code",
								"text": "`contract.simulate`"
							},
							{
								"kind": "text",
								"text": "](https://viem.sh/docs/contract/writeContract#usage) before you execute it.__"
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "A [Transaction Hash](https://viem.sh/docs/glossary/terms#hash). "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "WriteContractReturnType",
										"target": "https://viem.sh/docs/glossary/types#hash"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nimport { createWalletClient, custom, parseAbi } from 'viem'\nimport { mainnet } from 'viem/chains'\nimport { writeContract } from 'viem/contract'\n\nconst client = createWalletClient({\n  chain: mainnet,\n  transport: custom(window.ethereum),\n})\nconst hash = await writeContract(client, {\n  address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n  abi: parseAbi(['function mint(uint32 tokenId) nonpayable']),\n  functionName: 'mint',\n  args: [69420],\n})\n```"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n// With Validation\nimport { createWalletClient, http, parseAbi } from 'viem'\nimport { mainnet } from 'viem/chains'\nimport { simulateContract, writeContract } from 'viem/contract'\n\nconst client = createWalletClient({\n  chain: mainnet,\n  transport: http(),\n})\nconst { request } = await simulateContract(client, {\n  address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n  abi: parseAbi(['function mint(uint32 tokenId) nonpayable']),\n  functionName: 'mint',\n  args: [69420],\n}\nconst hash = await writeContract(client, request)\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/seismic-viem/src/contract/write.ts",
							"line": 88,
							"character": 22,
							"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/contract/write.ts#L88"
						}
					],
					"typeParameters": [
						{
							"id": 58,
							"name": "TTransport",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/viem/clients/transports/createTransport.ts",
									"qualifiedName": "Transport"
								},
								"name": "Transport",
								"package": "viem"
							}
						},
						{
							"id": 59,
							"name": "TChain",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/viem/types/chain.ts",
											"qualifiedName": "Chain"
										},
										"name": "Chain",
										"package": "viem"
									}
								]
							}
						},
						{
							"id": 60,
							"name": "TAccount",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/viem/accounts/types.ts",
											"qualifiedName": "Account"
										},
										"name": "Account",
										"package": "viem"
									}
								]
							}
						},
						{
							"id": 61,
							"name": "TAbi",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {
								"isConst": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/abitype/src/abi.ts",
											"qualifiedName": "Abi"
										},
										"name": "Abi",
										"package": "abitype"
									},
									{
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									}
								]
							}
						},
						{
							"id": 62,
							"name": "TFunctionName",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 63,
							"name": "TArgs",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 64,
							"name": "chainOverride",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/viem/types/chain.ts",
											"qualifiedName": "Chain"
										},
										"name": "Chain",
										"package": "viem"
									}
								]
							},
							"default": {
								"type": "intrinsic",
								"name": "undefined"
							}
						}
					],
					"parameters": [
						{
							"id": 65,
							"name": "client",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Client to use"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 140,
								"typeArguments": [
									{
										"type": "reference",
										"target": 58,
										"name": "TTransport",
										"package": "seismic-viem",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 59,
										"name": "TChain",
										"package": "seismic-viem",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 60,
										"name": "TAccount",
										"package": "seismic-viem",
										"refersToTypeParameter": true
									}
								],
								"name": "ShieldedWalletClient",
								"package": "seismic-viem"
							}
						},
						{
							"id": 66,
							"name": "parameters",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "WriteContractParameters",
										"target": "https://viem.sh/docs/contract/writeContract.html#parameters"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/viem/actions/wallet/writeContract.ts",
									"qualifiedName": "WriteContractParameters"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 61,
										"name": "TAbi",
										"package": "seismic-viem",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 62,
										"name": "TFunctionName",
										"package": "seismic-viem",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 63,
										"name": "TArgs",
										"package": "seismic-viem",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 59,
										"name": "TChain",
										"package": "seismic-viem",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 60,
										"name": "TAccount",
										"package": "seismic-viem",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 64,
										"name": "chainOverride",
										"package": "seismic-viem",
										"refersToTypeParameter": true
									}
								],
								"name": "WriteContractParameters",
								"package": "viem"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/viem/actions/wallet/writeContract.ts",
									"qualifiedName": "WriteContractReturnType"
								},
								"name": "WriteContractReturnType",
								"package": "viem"
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 47,
			"name": "signedReadContract",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/seismic-viem/src/contract/read.ts",
					"line": 76,
					"character": 22,
					"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/contract/read.ts#L76"
				}
			],
			"signatures": [
				{
					"id": 48,
					"name": "signedReadContract",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Executes a signed read operation on a smart contract.\n\nThis function securely interacts with a contract's "
							},
							{
								"kind": "code",
								"text": "`nonpayable`"
							},
							{
								"kind": "text",
								"text": " or "
							},
							{
								"kind": "code",
								"text": "`payable`"
							},
							{
								"kind": "text",
								"text": " function by signing the request.\nIt supports advanced functionality such as parameter encoding and ABI remapping for shielded operations."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "A promise that resolves to the response from the contract. Type is inferred from the ABI"
									}
								]
							},
							{
								"tag": "@throws",
								"content": [
									{
										"kind": "text",
										"text": "If the account is not specified for the operation."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```typescript\nconst result = await signedReadContract(client, {\n  abi: myContractAbi,\n  functionName: 'getBalance',\n  args: ['0x1234...'],\n  address: '0x5678...',\n});\nconsole.log('Balance:', result);\n```"
									}
								]
							},
							{
								"tag": "@remarks",
								"content": [
									{
										"kind": "text",
										"text": "- If no "
									},
									{
										"kind": "code",
										"text": "`account`"
									},
									{
										"kind": "text",
										"text": " is specified in the parameters, the function defaults to using a standard read operation ("
									},
									{
										"kind": "code",
										"text": "`readContract`"
									},
									{
										"kind": "text",
										"text": ").\n- Encodes the ABI parameters and function selector for shielded calls.\n- Uses "
									},
									{
										"kind": "code",
										"text": "`signedCall`"
									},
									{
										"kind": "text",
										"text": " to securely sign and send the request.\n- The "
									},
									{
										"kind": "code",
										"text": "`data`"
									},
									{
										"kind": "text",
										"text": " returned by the contract call is decoded based on the provided ABI."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/seismic-viem/src/contract/read.ts",
							"line": 76,
							"character": 22,
							"url": "https://github.com/SeismicSystems/seismic-client/blob/53e6e22df8999336b27b6285b6470437ab29345f/packages/seismic-viem/src/contract/read.ts#L76"
						}
					],
					"typeParameters": [
						{
							"id": 49,
							"name": "TChain",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The blockchain chain type (extends "
									},
									{
										"kind": "code",
										"text": "`Chain`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": ")."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/viem/types/chain.ts",
											"qualifiedName": "Chain"
										},
										"name": "Chain",
										"package": "viem"
									}
								]
							}
						},
						{
							"id": 50,
							"name": "TAccount",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The account type used for signing the read operation (extends "
									},
									{
										"kind": "code",
										"text": "`Account`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": ")."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/viem/accounts/types.ts",
											"qualifiedName": "Account"
										},
										"name": "Account",
										"package": "viem"
									}
								]
							}
						},
						{
							"id": 51,
							"name": "TAbi",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ABI (Application Binary Interface) of the contract, supporting "
									},
									{
										"kind": "code",
										"text": "`Abi`"
									},
									{
										"kind": "text",
										"text": " or unknown arrays."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/abitype/src/abi.ts",
											"qualifiedName": "Abi"
										},
										"name": "Abi",
										"package": "abitype"
									},
									{
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									}
								]
							}
						},
						{
							"id": 52,
							"name": "TFunctionName",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the contract function to call ("
									},
									{
										"kind": "code",
										"text": "`nonpayable`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`payable`"
									},
									{
										"kind": "text",
										"text": ")."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 53,
							"name": "TArgs",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The arguments for the function call, derived from the ABI and function name."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"parameters": [
						{
							"id": 54,
							"name": "client",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The client used to execute the signed read operation. Must be a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "ShieldedPublicClient",
										"target": 135
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "ShieldedWalletClient",
										"target": 140
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/contract/read.ts",
									"qualifiedName": "SignedReadClient"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 49,
										"name": "TChain",
										"package": "seismic-viem",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 50,
										"name": "TAccount",
										"package": "seismic-viem",
										"refersToTypeParameter": true
									}
								],
								"name": "SignedReadClient",
								"package": "seismic-viem"
							}
						},
						{
							"id": 55,
							"name": "parameters",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "parameters",
										"target": "https://viem.sh/docs/contract/readContract.html#parameters"
									},
									{
										"kind": "text",
										"text": " for the read operation, including:\n- "
									},
									{
										"kind": "code",
										"text": "`abi`"
									},
									{
										"kind": "text",
										"text": ": The contract's ABI.\n- "
									},
									{
										"kind": "code",
										"text": "`functionName`"
									},
									{
										"kind": "text",
										"text": ": The name of the function to call.\n- "
									},
									{
										"kind": "code",
										"text": "`args`"
									},
									{
										"kind": "text",
										"text": ": The arguments for the function.\n- "
									},
									{
										"kind": "code",
										"text": "`address`"
									},
									{
										"kind": "text",
										"text": ": The contract's address on the blockchain.\n- Additional options for customizing the call request."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/viem/actions/public/readContract.ts",
									"qualifiedName": "ReadContractParameters"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 51,
										"name": "TAbi",
										"package": "seismic-viem",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 52,
										"name": "TFunctionName",
										"package": "seismic-viem",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 53,
										"name": "TArgs",
										"package": "seismic-viem",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadContractParameters",
								"package": "viem"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/viem/actions/public/readContract.ts",
									"qualifiedName": "ReadContractReturnType"
								},
								"name": "ReadContractReturnType",
								"package": "viem"
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Type Aliases",
			"children": [
				147,
				144,
				105,
				135,
				119,
				140,
				168,
				96,
				101,
				151,
				158
			]
		},
		{
			"title": "Variables",
			"children": [
				1
			]
		},
		{
			"title": "Functions",
			"children": [
				67,
				93,
				38,
				56,
				47
			]
		}
	],
	"packageName": "seismic-viem",
	"readme": [
		{
			"kind": "text",
			"text": "# Seismic viem actions\n\nThis is a package to extend viem clients for use with the Seismic blockchain"
		}
	],
	"symbolIdMap": {
		"0": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": ""
		},
		"1": {
			"sourceFileName": "src/chain.ts",
			"qualifiedName": "seismicDevnet"
		},
		"2": {
			"sourceFileName": "../../node_modules/viem/types/utils.ts",
			"qualifiedName": "__type"
		},
		"3": {
			"sourceFileName": "../../node_modules/viem/types/chain.ts",
			"qualifiedName": "blockExplorers"
		},
		"4": {
			"sourceFileName": "../../node_modules/viem/types/chain.ts",
			"qualifiedName": "__type"
		},
		"5": {
			"sourceFileName": "../../node_modules/viem/types/chain.ts",
			"qualifiedName": "__type.default"
		},
		"6": {
			"sourceFileName": "../../node_modules/viem/types/chain.ts",
			"qualifiedName": "__type.__index"
		},
		"8": {
			"sourceFileName": "../../node_modules/viem/types/chain.ts",
			"qualifiedName": "contracts"
		},
		"9": {
			"sourceFileName": "../../node_modules/viem/types/utils.ts",
			"qualifiedName": "__type"
		},
		"10": {
			"sourceFileName": "../../node_modules/viem/types/chain.ts",
			"qualifiedName": "ensRegistry"
		},
		"11": {
			"sourceFileName": "../../node_modules/viem/types/chain.ts",
			"qualifiedName": "ensUniversalResolver"
		},
		"12": {
			"sourceFileName": "../../node_modules/viem/types/chain.ts",
			"qualifiedName": "multicall3"
		},
		"13": {
			"sourceFileName": "../../node_modules/viem/types/chain.ts",
			"qualifiedName": "universalSignatureVerifier"
		},
		"16": {
			"sourceFileName": "../../node_modules/viem/types/chain.ts",
			"qualifiedName": "__type"
		},
		"17": {
			"sourceFileName": "../../node_modules/viem/types/chain.ts",
			"qualifiedName": "__type.__index"
		},
		"19": {
			"sourceFileName": "../../node_modules/viem/types/chain.ts",
			"qualifiedName": "id"
		},
		"20": {
			"sourceFileName": "../../node_modules/viem/types/chain.ts",
			"qualifiedName": "name"
		},
		"21": {
			"sourceFileName": "../../node_modules/viem/types/chain.ts",
			"qualifiedName": "nativeCurrency"
		},
		"22": {
			"sourceFileName": "src/chain.ts",
			"qualifiedName": "__object"
		},
		"23": {
			"sourceFileName": "src/chain.ts",
			"qualifiedName": "__object.decimals"
		},
		"24": {
			"sourceFileName": "src/chain.ts",
			"qualifiedName": "__object.name"
		},
		"25": {
			"sourceFileName": "src/chain.ts",
			"qualifiedName": "__object.symbol"
		},
		"26": {
			"sourceFileName": "../../node_modules/viem/types/chain.ts",
			"qualifiedName": "rpcUrls"
		},
		"27": {
			"sourceFileName": "src/chain.ts",
			"qualifiedName": "__object"
		},
		"28": {
			"sourceFileName": "src/chain.ts",
			"qualifiedName": "__object.default"
		},
		"29": {
			"sourceFileName": "src/chain.ts",
			"qualifiedName": "__object"
		},
		"30": {
			"sourceFileName": "src/chain.ts",
			"qualifiedName": "__object.http"
		},
		"31": {
			"sourceFileName": "src/chain.ts",
			"qualifiedName": "__object.webSocket"
		},
		"32": {
			"sourceFileName": "../../node_modules/viem/types/chain.ts",
			"qualifiedName": "sourceId"
		},
		"33": {
			"sourceFileName": "../../node_modules/viem/types/chain.ts",
			"qualifiedName": "testnet"
		},
		"34": {
			"sourceFileName": "../../node_modules/viem/types/chain.ts",
			"qualifiedName": "custom"
		},
		"35": {
			"sourceFileName": "../../node_modules/viem/types/chain.ts",
			"qualifiedName": "fees"
		},
		"36": {
			"sourceFileName": "../../node_modules/viem/types/chain.ts",
			"qualifiedName": "formatters"
		},
		"37": {
			"sourceFileName": "../../node_modules/viem/types/chain.ts",
			"qualifiedName": "serializers"
		},
		"38": {
			"sourceFileName": "src/contract/contract.ts",
			"qualifiedName": "getShieldedContract"
		},
		"39": {
			"sourceFileName": "src/contract/contract.ts",
			"qualifiedName": "getShieldedContract"
		},
		"40": {
			"sourceFileName": "src/contract/contract.ts",
			"qualifiedName": "TTransport"
		},
		"41": {
			"sourceFileName": "src/contract/contract.ts",
			"qualifiedName": "TAddress"
		},
		"42": {
			"sourceFileName": "src/contract/contract.ts",
			"qualifiedName": "TAbi"
		},
		"43": {
			"sourceFileName": "src/contract/contract.ts",
			"qualifiedName": "TClient"
		},
		"44": {
			"sourceFileName": "src/contract/contract.ts",
			"qualifiedName": "TChain"
		},
		"45": {
			"sourceFileName": "src/contract/contract.ts",
			"qualifiedName": "TAccount"
		},
		"46": {
			"sourceFileName": "src/contract/contract.ts",
			"qualifiedName": "__0"
		},
		"47": {
			"sourceFileName": "src/contract/read.ts",
			"qualifiedName": "signedReadContract"
		},
		"48": {
			"sourceFileName": "src/contract/read.ts",
			"qualifiedName": "signedReadContract"
		},
		"49": {
			"sourceFileName": "src/contract/read.ts",
			"qualifiedName": "TChain"
		},
		"50": {
			"sourceFileName": "src/contract/read.ts",
			"qualifiedName": "TAccount"
		},
		"51": {
			"sourceFileName": "src/contract/read.ts",
			"qualifiedName": "TAbi"
		},
		"52": {
			"sourceFileName": "src/contract/read.ts",
			"qualifiedName": "TFunctionName"
		},
		"53": {
			"sourceFileName": "src/contract/read.ts",
			"qualifiedName": "TArgs"
		},
		"54": {
			"sourceFileName": "src/contract/read.ts",
			"qualifiedName": "client"
		},
		"55": {
			"sourceFileName": "src/contract/read.ts",
			"qualifiedName": "parameters"
		},
		"56": {
			"sourceFileName": "src/contract/write.ts",
			"qualifiedName": "shieldedWriteContract"
		},
		"57": {
			"sourceFileName": "src/contract/write.ts",
			"qualifiedName": "shieldedWriteContract"
		},
		"58": {
			"sourceFileName": "src/contract/write.ts",
			"qualifiedName": "TTransport"
		},
		"59": {
			"sourceFileName": "src/contract/write.ts",
			"qualifiedName": "TChain"
		},
		"60": {
			"sourceFileName": "src/contract/write.ts",
			"qualifiedName": "TAccount"
		},
		"61": {
			"sourceFileName": "src/contract/write.ts",
			"qualifiedName": "TAbi"
		},
		"62": {
			"sourceFileName": "src/contract/write.ts",
			"qualifiedName": "TFunctionName"
		},
		"63": {
			"sourceFileName": "src/contract/write.ts",
			"qualifiedName": "TArgs"
		},
		"64": {
			"sourceFileName": "src/contract/write.ts",
			"qualifiedName": "chainOverride"
		},
		"65": {
			"sourceFileName": "src/contract/write.ts",
			"qualifiedName": "client"
		},
		"66": {
			"sourceFileName": "src/contract/write.ts",
			"qualifiedName": "parameters"
		},
		"67": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "createShieldedPublicClient"
		},
		"68": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "createShieldedPublicClient"
		},
		"69": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "transport"
		},
		"70": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "chain"
		},
		"71": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "rpcSchema"
		},
		"72": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "parameters"
		},
		"73": {
			"sourceFileName": "../../node_modules/viem/types/utils.ts",
			"qualifiedName": "__type"
		},
		"74": {
			"sourceFileName": "../../node_modules/viem/clients/createClient.ts",
			"qualifiedName": "name"
		},
		"75": {
			"sourceFileName": "../../node_modules/viem/clients/createClient.ts",
			"qualifiedName": "batch"
		},
		"76": {
			"sourceFileName": "../../node_modules/viem/clients/createClient.ts",
			"qualifiedName": "__type"
		},
		"77": {
			"sourceFileName": "../../node_modules/viem/clients/createClient.ts",
			"qualifiedName": "__type.multicall"
		},
		"78": {
			"sourceFileName": "../../node_modules/viem/types/utils.ts",
			"qualifiedName": "__type"
		},
		"79": {
			"sourceFileName": "../../node_modules/viem/clients/createClient.ts",
			"qualifiedName": "batchSize"
		},
		"80": {
			"sourceFileName": "../../node_modules/viem/clients/createClient.ts",
			"qualifiedName": "wait"
		},
		"81": {
			"sourceFileName": "../../node_modules/viem/clients/createClient.ts",
			"qualifiedName": "cacheTime"
		},
		"82": {
			"sourceFileName": "../../node_modules/viem/clients/createClient.ts",
			"qualifiedName": "ccipRead"
		},
		"83": {
			"sourceFileName": "../../node_modules/viem/clients/createClient.ts",
			"qualifiedName": "__type"
		},
		"84": {
			"sourceFileName": "../../node_modules/viem/clients/createClient.ts",
			"qualifiedName": "__type.request"
		},
		"85": {
			"sourceFileName": "../../node_modules/viem/clients/createClient.ts",
			"qualifiedName": "__type"
		},
		"86": {
			"sourceFileName": "../../node_modules/viem/clients/createClient.ts",
			"qualifiedName": "__type"
		},
		"87": {
			"sourceFileName": "../../node_modules/viem/clients/createClient.ts",
			"qualifiedName": "parameters"
		},
		"88": {
			"sourceFileName": "../../node_modules/viem/clients/createClient.ts",
			"qualifiedName": "chain"
		},
		"89": {
			"sourceFileName": "../../node_modules/viem/clients/createClient.ts",
			"qualifiedName": "key"
		},
		"90": {
			"sourceFileName": "../../node_modules/viem/clients/createClient.ts",
			"qualifiedName": "pollingInterval"
		},
		"91": {
			"sourceFileName": "../../node_modules/viem/clients/createClient.ts",
			"qualifiedName": "transport"
		},
		"92": {
			"sourceFileName": "../../node_modules/viem/clients/createClient.ts",
			"qualifiedName": "rpcSchema"
		},
		"93": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "createShieldedWalletClient"
		},
		"94": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "createShieldedWalletClient"
		},
		"95": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "__0"
		},
		"96": {
			"sourceFileName": "src/signedCall.ts",
			"qualifiedName": "SignedCall"
		},
		"97": {
			"sourceFileName": "src/signedCall.ts",
			"qualifiedName": "__type"
		},
		"98": {
			"sourceFileName": "src/signedCall.ts",
			"qualifiedName": "__type"
		},
		"99": {
			"sourceFileName": "src/signedCall.ts",
			"qualifiedName": "args"
		},
		"100": {
			"sourceFileName": "src/signedCall.ts",
			"qualifiedName": "chain"
		},
		"101": {
			"sourceFileName": "src/signedCall.ts",
			"qualifiedName": "SignedCallParameters"
		},
		"102": {
			"sourceFileName": "src/signedCall.ts",
			"qualifiedName": "__type"
		},
		"103": {
			"sourceFileName": "src/signedCall.ts",
			"qualifiedName": "__type.seismicInput"
		},
		"104": {
			"sourceFileName": "src/signedCall.ts",
			"qualifiedName": "chain"
		},
		"105": {
			"sourceFileName": "src/actions/public.ts",
			"qualifiedName": "ShieldedPublicActions"
		},
		"106": {
			"sourceFileName": "src/actions/public.ts",
			"qualifiedName": "__type"
		},
		"107": {
			"sourceFileName": "src/actions/public.ts",
			"qualifiedName": "__type.getTeePublicKey"
		},
		"108": {
			"sourceFileName": "src/actions/public.ts",
			"qualifiedName": "__type"
		},
		"109": {
			"sourceFileName": "src/actions/public.ts",
			"qualifiedName": "__type"
		},
		"110": {
			"sourceFileName": "src/actions/public.ts",
			"qualifiedName": "__type.getStorageAt"
		},
		"111": {
			"sourceFileName": "src/actions/public.ts",
			"qualifiedName": "__type"
		},
		"112": {
			"sourceFileName": "src/actions/public.ts",
			"qualifiedName": "__type"
		},
		"113": {
			"sourceFileName": "src/actions/public.ts",
			"qualifiedName": "args"
		},
		"114": {
			"sourceFileName": "src/actions/public.ts",
			"qualifiedName": "__type.getTransaction"
		},
		"115": {
			"sourceFileName": "src/actions/public.ts",
			"qualifiedName": "__type"
		},
		"116": {
			"sourceFileName": "src/actions/public.ts",
			"qualifiedName": "__type"
		},
		"117": {
			"sourceFileName": "src/actions/public.ts",
			"qualifiedName": "args"
		},
		"118": {
			"sourceFileName": "src/actions/public.ts",
			"qualifiedName": "TChain"
		},
		"119": {
			"sourceFileName": "src/actions/wallet.ts",
			"qualifiedName": "ShieldedWalletActions"
		},
		"120": {
			"sourceFileName": "src/actions/wallet.ts",
			"qualifiedName": "__type"
		},
		"121": {
			"sourceFileName": "src/actions/wallet.ts",
			"qualifiedName": "__type.writeContract"
		},
		"122": {
			"sourceFileName": "src/actions/wallet.ts",
			"qualifiedName": "__type.readContract"
		},
		"123": {
			"sourceFileName": "src/actions/wallet.ts",
			"qualifiedName": "__type.signedCall"
		},
		"124": {
			"sourceFileName": "src/actions/wallet.ts",
			"qualifiedName": "__type.sendShieldedTransaction"
		},
		"125": {
			"sourceFileName": "src/actions/wallet.ts",
			"qualifiedName": "__type"
		},
		"126": {
			"sourceFileName": "src/actions/wallet.ts",
			"qualifiedName": "__type"
		},
		"127": {
			"sourceFileName": "src/actions/wallet.ts",
			"qualifiedName": "args"
		},
		"128": {
			"sourceFileName": "src/actions/wallet.ts",
			"qualifiedName": "request"
		},
		"129": {
			"sourceFileName": "src/actions/wallet.ts",
			"qualifiedName": "TChainOverride"
		},
		"130": {
			"sourceFileName": "src/actions/wallet.ts",
			"qualifiedName": "__type.getEncryption"
		},
		"131": {
			"sourceFileName": "src/actions/wallet.ts",
			"qualifiedName": "__type"
		},
		"132": {
			"sourceFileName": "src/actions/wallet.ts",
			"qualifiedName": "__type"
		},
		"133": {
			"sourceFileName": "src/actions/wallet.ts",
			"qualifiedName": "TChain"
		},
		"134": {
			"sourceFileName": "src/actions/wallet.ts",
			"qualifiedName": "TAccount"
		},
		"135": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "ShieldedPublicClient"
		},
		"136": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "transport"
		},
		"137": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "chain"
		},
		"138": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "accountOrAddress"
		},
		"139": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "rpcSchema"
		},
		"140": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "ShieldedWalletClient"
		},
		"141": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "transport"
		},
		"142": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "chain"
		},
		"143": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "account"
		},
		"144": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "GetSeismicClientsParameters"
		},
		"145": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "__type"
		},
		"146": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "__type.privateKey"
		},
		"147": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "GetPublicClientParameters"
		},
		"148": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "__type"
		},
		"149": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "__type.chain"
		},
		"150": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "__type.transport"
		},
		"151": {
			"sourceFileName": "src/contract/read.ts",
			"qualifiedName": "SignedReadContract"
		},
		"152": {
			"sourceFileName": "src/contract/read.ts",
			"qualifiedName": "__type"
		},
		"153": {
			"sourceFileName": "src/contract/read.ts",
			"qualifiedName": "__type"
		},
		"154": {
			"sourceFileName": "src/contract/read.ts",
			"qualifiedName": "args"
		},
		"155": {
			"sourceFileName": "src/contract/read.ts",
			"qualifiedName": "TAbi"
		},
		"156": {
			"sourceFileName": "src/contract/read.ts",
			"qualifiedName": "TFunctionName"
		},
		"157": {
			"sourceFileName": "src/contract/read.ts",
			"qualifiedName": "TArgs"
		},
		"158": {
			"sourceFileName": "src/contract/contract.ts",
			"qualifiedName": "SignedReadContractReturnType"
		},
		"159": {
			"sourceFileName": "src/contract/contract.ts",
			"qualifiedName": "__type"
		},
		"160": {
			"sourceFileName": "src/contract/contract.ts",
			"qualifiedName": "__type.sread"
		},
		"161": {
			"sourceFileName": "src/contract/contract.ts",
			"qualifiedName": "TAbi"
		},
		"162": {
			"sourceFileName": "src/contract/contract.ts",
			"qualifiedName": "TClient"
		},
		"163": {
			"sourceFileName": "src/contract/contract.ts",
			"qualifiedName": "_readFunctionNames"
		},
		"164": {
			"sourceFileName": "src/contract/contract.ts",
			"qualifiedName": "_narrowable"
		},
		"165": {
			"sourceFileName": "src/contract/contract.ts",
			"qualifiedName": "_walletClient"
		},
		"166": {
			"sourceFileName": "src/contract/contract.ts",
			"qualifiedName": "__type"
		},
		"167": {
			"sourceFileName": "src/contract/contract.ts",
			"qualifiedName": "__type.wallet"
		},
		"168": {
			"sourceFileName": "src/contract/write.ts",
			"qualifiedName": "ShieldedWriteContract"
		},
		"169": {
			"sourceFileName": "src/contract/write.ts",
			"qualifiedName": "__type"
		},
		"170": {
			"sourceFileName": "src/contract/write.ts",
			"qualifiedName": "__type"
		},
		"171": {
			"sourceFileName": "src/contract/write.ts",
			"qualifiedName": "args"
		},
		"172": {
			"sourceFileName": "src/contract/write.ts",
			"qualifiedName": "TChain"
		},
		"173": {
			"sourceFileName": "src/contract/write.ts",
			"qualifiedName": "TAccount"
		},
		"174": {
			"sourceFileName": "src/contract/write.ts",
			"qualifiedName": "abi"
		},
		"175": {
			"sourceFileName": "src/contract/write.ts",
			"qualifiedName": "functionName"
		},
		"176": {
			"sourceFileName": "src/contract/write.ts",
			"qualifiedName": "args"
		},
		"177": {
			"sourceFileName": "src/contract/write.ts",
			"qualifiedName": "TChainOverride"
		}
	},
	"files": {
		"entries": {
			"1": "src/index.ts"
		},
		"reflections": {
			"1": 0
		}
	}
}
